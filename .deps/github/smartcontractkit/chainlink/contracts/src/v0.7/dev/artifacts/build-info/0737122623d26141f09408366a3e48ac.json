{
	"id": "0737122623d26141f09408366a3e48ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"../ConfirmedOwner.sol\";\nimport \"../interfaces/AggregatorProxyInterface.sol\";\n\n/**\n * @title A trusted proxy for updating where current answers are read from\n * @notice This contract provides a consistent address for the\n * CurrentAnswerInterface but delegates where it reads from to the owner, who is\n * trusted to update it.\n */\ncontract AggregatorProxy is AggregatorProxyInterface, ConfirmedOwner {\n  struct Phase {\n    uint16 id;\n    AggregatorProxyInterface aggregator;\n  }\n  AggregatorProxyInterface private s_proposedAggregator;\n  mapping(uint16 => AggregatorProxyInterface) private s_phaseAggregators;\n  Phase private s_currentPhase;\n\n  uint256 private constant PHASE_OFFSET = 64;\n  uint256 private constant PHASE_SIZE = 16;\n  uint256 private constant MAX_ID = 2**(PHASE_OFFSET + PHASE_SIZE) - 1;\n\n  event AggregatorProposed(address indexed current, address indexed proposed);\n  event AggregatorConfirmed(address indexed previous, address indexed latest);\n\n  constructor(address aggregatorAddress) ConfirmedOwner(msg.sender) {\n    setAggregator(aggregatorAddress);\n  }\n\n  /**\n   * @notice Reads the current answer from aggregator delegated to.\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestAnswer() public view virtual override returns (int256 answer) {\n    return s_currentPhase.aggregator.latestAnswer();\n  }\n\n  /**\n   * @notice Reads the last updated height from aggregator delegated to.\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestTimestamp() public view virtual override returns (uint256 updatedAt) {\n    return s_currentPhase.aggregator.latestTimestamp();\n  }\n\n  /**\n   * @notice get past rounds answers\n   * @param roundId the answer number to retrieve the answer for\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getAnswer(uint256 roundId) public view virtual override returns (int256 answer) {\n    if (roundId > MAX_ID) return 0;\n\n    (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId);\n    AggregatorProxyInterface aggregator = s_phaseAggregators[phaseId];\n    if (address(aggregator) == address(0)) return 0;\n\n    return aggregator.getAnswer(aggregatorRoundId);\n  }\n\n  /**\n   * @notice get block timestamp when an answer was last updated\n   * @param roundId the answer number to retrieve the updated timestamp for\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getTimestamp(uint256 roundId) public view virtual override returns (uint256 updatedAt) {\n    if (roundId > MAX_ID) return 0;\n\n    (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId);\n    AggregatorProxyInterface aggregator = s_phaseAggregators[phaseId];\n    if (address(aggregator) == address(0)) return 0;\n\n    return aggregator.getTimestamp(aggregatorRoundId);\n  }\n\n  /**\n   * @notice get the latest completed round where the answer was updated. This\n   * ID includes the proxy's phase, to make sure round IDs increase even when\n   * switching to a newly deployed aggregator.\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestRound() public view virtual override returns (uint256 roundId) {\n    Phase memory phase = s_currentPhase; // cache storage reads\n    return addPhase(phase.id, uint64(phase.aggregator.latestRound()));\n  }\n\n  /**\n   * @notice get data about a round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values.\n   * Note that different underlying implementations of AggregatorV3Interface\n   * have slightly different semantics for some of the return values. Consumers\n   * should determine what implementations they expect to receive\n   * data from and validate that they can properly handle return data from all\n   * of them.\n   * @param roundId the requested round ID as presented through the proxy, this\n   * is made up of the aggregator's round ID with the phase ID encoded in the\n   * two highest order bytes\n   * @return id is the round ID from the aggregator for which the data was\n   * retrieved combined with an phase to ensure that round IDs get larger as\n   * time moves forward.\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @dev Note that answer and updatedAt may change between queries.\n   */\n  function getRoundData(uint80 roundId)\n    public\n    view\n    virtual\n    override\n    returns (\n      uint80 id,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId);\n\n    (id, answer, startedAt, updatedAt, answeredInRound) = s_phaseAggregators[phaseId].getRoundData(aggregatorRoundId);\n\n    return addPhaseIds(id, answer, startedAt, updatedAt, answeredInRound, phaseId);\n  }\n\n  /**\n   * @notice get data about the latest round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values.\n   * Note that different underlying implementations of AggregatorV3Interface\n   * have slightly different semantics for some of the return values. Consumers\n   * should determine what implementations they expect to receive\n   * data from and validate that they can properly handle return data from all\n   * of them.\n   * @return id is the round ID from the aggregator for which the data was\n   * retrieved combined with an phase to ensure that round IDs get larger as\n   * time moves forward.\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @dev Note that answer and updatedAt may change between queries.\n   */\n  function latestRoundData()\n    public\n    view\n    virtual\n    override\n    returns (\n      uint80 id,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    Phase memory current = s_currentPhase; // cache storage reads\n\n    (id, answer, startedAt, updatedAt, answeredInRound) = current.aggregator.latestRoundData();\n\n    return addPhaseIds(id, answer, startedAt, updatedAt, answeredInRound, current.id);\n  }\n\n  /**\n   * @notice Used if an aggregator contract has been proposed.\n   * @param roundId the round ID to retrieve the round data for\n   * @return id is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed.\n   */\n  function proposedGetRoundData(uint80 roundId)\n    external\n    view\n    virtual\n    override\n    hasProposal\n    returns (\n      uint80 id,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return s_proposedAggregator.getRoundData(roundId);\n  }\n\n  /**\n   * @notice Used if an aggregator contract has been proposed.\n   * @return id is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed.\n   */\n  function proposedLatestRoundData()\n    external\n    view\n    virtual\n    override\n    hasProposal\n    returns (\n      uint80 id,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return s_proposedAggregator.latestRoundData();\n  }\n\n  /**\n   * @notice returns the current phase's aggregator address.\n   */\n  function aggregator() external view override returns (address) {\n    return address(s_currentPhase.aggregator);\n  }\n\n  /**\n   * @notice returns the current phase's ID.\n   */\n  function phaseId() external view override returns (uint16) {\n    return s_currentPhase.id;\n  }\n\n  /**\n   * @notice represents the number of decimals the aggregator responses represent.\n   */\n  function decimals() external view override returns (uint8) {\n    return s_currentPhase.aggregator.decimals();\n  }\n\n  /**\n   * @notice the version number representing the type of aggregator the proxy\n   * points to.\n   */\n  function version() external view override returns (uint256) {\n    return s_currentPhase.aggregator.version();\n  }\n\n  /**\n   * @notice returns the description of the aggregator the proxy points to.\n   */\n  function description() external view override returns (string memory) {\n    return s_currentPhase.aggregator.description();\n  }\n\n  /**\n   * @notice returns the current proposed aggregator\n   */\n  function proposedAggregator() external view override returns (address) {\n    return address(s_proposedAggregator);\n  }\n\n  /**\n   * @notice return a phase aggregator using the phaseId\n   *\n   * @param phaseId uint16\n   */\n  function phaseAggregators(uint16 phaseId) external view override returns (address) {\n    return address(s_phaseAggregators[phaseId]);\n  }\n\n  /**\n   * @notice Allows the owner to propose a new address for the aggregator\n   * @param aggregatorAddress The new address for the aggregator contract\n   */\n  function proposeAggregator(address aggregatorAddress) external onlyOwner {\n    s_proposedAggregator = AggregatorProxyInterface(aggregatorAddress);\n    emit AggregatorProposed(address(s_currentPhase.aggregator), aggregatorAddress);\n  }\n\n  /**\n   * @notice Allows the owner to confirm and change the address\n   * to the proposed aggregator\n   * @dev Reverts if the given address doesn't match what was previously\n   * proposed\n   * @param aggregatorAddress The new address for the aggregator contract\n   */\n  function confirmAggregator(address aggregatorAddress) external onlyOwner {\n    require(aggregatorAddress == address(s_proposedAggregator), \"Invalid proposed aggregator\");\n    address previousAggregator = address(s_currentPhase.aggregator);\n    delete s_proposedAggregator;\n    setAggregator(aggregatorAddress);\n    emit AggregatorConfirmed(previousAggregator, aggregatorAddress);\n  }\n\n  /*\n   * Internal\n   */\n\n  function setAggregator(address aggregatorAddress) internal {\n    uint16 id = s_currentPhase.id + 1;\n    s_currentPhase = Phase(id, AggregatorProxyInterface(aggregatorAddress));\n    s_phaseAggregators[id] = AggregatorProxyInterface(aggregatorAddress);\n  }\n\n  function addPhase(uint16 phase, uint64 originalId) internal pure returns (uint80) {\n    return uint80((uint256(phase) << PHASE_OFFSET) | originalId);\n  }\n\n  function parseIds(uint256 roundId) internal pure returns (uint16, uint64) {\n    uint16 phaseId = uint16(roundId >> PHASE_OFFSET);\n    uint64 aggregatorRoundId = uint64(roundId);\n\n    return (phaseId, aggregatorRoundId);\n  }\n\n  function addPhaseIds(\n    uint80 roundId,\n    int256 answer,\n    uint256 startedAt,\n    uint256 updatedAt,\n    uint80 answeredInRound,\n    uint16 phaseId\n  )\n    internal\n    pure\n    returns (\n      uint80,\n      int256,\n      uint256,\n      uint256,\n      uint80\n    )\n  {\n    return (\n      addPhase(phaseId, uint64(roundId)),\n      answer,\n      startedAt,\n      updatedAt,\n      addPhase(phaseId, uint64(answeredInRound))\n    );\n  }\n\n  /*\n   * Modifiers\n   */\n\n  modifier hasProposal() {\n    require(address(s_proposedAggregator) != address(0), \"No proposed aggregator present\");\n    _;\n  }\n}\n"
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./AggregatorV2V3Interface.sol\";\n\ninterface AggregatorProxyInterface is AggregatorV2V3Interface {\n  function phaseAggregators(uint16 phaseId) external view returns (address);\n\n  function phaseId() external view returns (uint16);\n\n  function proposedAggregator() external view returns (address);\n\n  function proposedGetRoundData(uint80 roundId)\n    external\n    view\n    returns (\n      uint80 id,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function proposedLatestRoundData()\n    external\n    view\n    returns (\n      uint80 id,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function aggregator() external view returns (address);\n}\n"
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./ConfirmedOwnerWithProposal.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./AggregatorInterface.sol\";\nimport \"./AggregatorV3Interface.sol\";\n\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface {}\n"
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./interfaces/OwnableInterface.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwnerWithProposal is OwnableInterface {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /**\n   * @notice Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /**\n   * @notice Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership() external override {\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @notice Get the current owner\n   */\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /**\n   * @notice validate, transfer ownership, and emit relevant events\n   */\n  function _transferOwnership(address to) private {\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /**\n   * @notice validate access\n   */\n  function _validateOwnership() internal view {\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /**\n   * @notice Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ninterface AggregatorInterface {\n  function latestAnswer() external view returns (int256);\n\n  function latestTimestamp() external view returns (uint256);\n\n  function latestRound() external view returns (uint256);\n\n  function getAnswer(uint256 roundId) external view returns (int256);\n\n  function getTimestamp(uint256 roundId) external view returns (uint256);\n\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\n\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\n}\n"
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ninterface OwnableInterface {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 900
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol": {
				"ConfirmedOwner": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The ConfirmedOwner contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":212:353  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":270:351  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n  dup1\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":345:346  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":552:574  newOwner != address(0) */\n  dup3\n  and\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":544:603  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_6\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x18\n  0x24\n  dup3\n  add\n  mstore\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_6:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":610:617  s_owner */\n  0x00\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":610:628  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":638:664  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":634:713  if (pendingOwner != address(0)) {... */\n  tag_8\n  jumpi\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:706  _transferOwnership(pendingOwner) */\n  tag_8\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":693:705  pendingOwner */\n  dup2\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:692  _transferOwnership */\n  tag_9\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:706  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_8:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":486:717  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":270:351  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  pop\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":212:353  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  jump(tag_11)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n  dup2\n  and\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1565:1575  msg.sender */\n  caller\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n  eq\n  iszero\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1551:1603  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_13\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x17\n  0x24\n  dup3\n  add\n  mstore\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_13:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1624  s_pendingOwner */\n  0x01\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n  dup1\n  sload\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n  and\n  swap2\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":212:353  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":212:353  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_12\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n    tag_7:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1089:1103  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1075:1085  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1075:1103  msg.sender == s_pendingOwner */\n      eq\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1067:1130  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_14\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x4d7573742062652070726f706f736564206f776e657200000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_14:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1137:1153  address oldOwner */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      dup1\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1179:1189  msg.sender */\n      caller\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1169:1189  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1195:1222  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1234:1276  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1179:1189  msg.sender */\n      swap1\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      dup4\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1234:1276  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n    tag_9:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1379:1386  address */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1401:1408  s_owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n    tag_12:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      tag_17\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1974  _validateOwnership */\n      tag_18\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      jump\t// in\n    tag_17:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:919  _transferOwnership(to) */\n      tag_20\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":916:918  to */\n      dup2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:915  _transferOwnership */\n      tag_21\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:919  _transferOwnership(to) */\n      jump\t// in\n    tag_20:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1730:1841  function _validateOwnership() internal view {... */\n    tag_18:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1802:1809  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1788:1798  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1788:1809  msg.sender == s_owner */\n      eq\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1780:1836  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_23\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_23:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1730:1841  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n      dup2\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1565:1575  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n      eq\n      iszero\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1551:1603  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_25\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_25:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1624  s_pendingOwner */\n      0x01\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n      dup1\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n      and\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206f4a024f0cbe4053bd4c531d6ebe109bb06810c4ffead8a98aab24330677c79e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161045c38038061045c8339818101604052602081101561003357600080fd5b50518060006001600160a01b038216610093576040805162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100c3576100c3816100cb565b50505061017a565b6001600160a01b038116331415610129576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6102d3806101896000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861015d565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661016c565b6001546001600160a01b031633146100f9576040805162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b600080543373ffffffffffffffffffffffffffffffffffffffff19808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6000546001600160a01b031690565b610174610180565b61017d816101e1565b50565b6000546001600160a01b031633146101df576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b565b6001600160a01b03811633141561023f576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a35056fea26469706673582212206f4a024f0cbe4053bd4c531d6ebe109bb06810c4ffead8a98aab24330677c79e64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x45C CODESIZE SUB DUP1 PUSH2 0x45C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x93 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xC3 JUMPI PUSH2 0xC3 DUP2 PUSH2 0xCB JUMP JUMPDEST POP POP POP PUSH2 0x17A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x129 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x2D3 DUP1 PUSH2 0x189 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17D DUP2 PUSH2 0x1E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x23F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x4A024F0CBE4053BD4C531D6EBE109BB0 PUSH9 0x10C4FFEAD8A98AAB24 CALLER MOD PUSH24 0xC79E64736F6C634300070600330000000000000000000000 ",
							"sourceMap": "212:141:0:-:0;;;270:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;270:81:0;;345:1;-1:-1:-1;;;;;552:22:1;;544:59;;;;;-1:-1:-1;;;544:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;610:7;:18;;-1:-1:-1;;;;;;610:18:1;-1:-1:-1;;;;;610:18:1;;;;;;;;;;638:26;;;634:79;;674:32;693:12;674:18;:32::i;:::-;486:231;;270:81:0;212:141;;1497:188:1;-1:-1:-1;;;;;1559:16:1;;1565:10;1559:16;;1551:52;;;;;-1:-1:-1;;;1551:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:14;:19;;-1:-1:-1;;;;;;1610:19:1;-1:-1:-1;;;;;1610:19:1;;;;;;;;;-1:-1:-1;1668:7:1;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:1;1497:188;:::o;212:141:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861015d565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661016c565b6001546001600160a01b031633146100f9576040805162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b600080543373ffffffffffffffffffffffffffffffffffffffff19808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6000546001600160a01b031690565b610174610180565b61017d816101e1565b50565b6000546001600160a01b031633146101df576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b565b6001600160a01b03811633141561023f576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a35056fea26469706673582212206f4a024f0cbe4053bd4c531d6ebe109bb06810c4ffead8a98aab24330677c79e64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17D DUP2 PUSH2 0x1E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x23F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x4A024F0CBE4053BD4C531D6EBE109BB0 PUSH9 0x10C4FFEAD8A98AAB24 CALLER MOD PUSH24 0xC79E64736F6C634300070600330000000000000000000000 ",
							"sourceMap": "212:141:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:265:1;;;:::i;:::-;;1332:81;;;:::i;:::-;;;;-1:-1:-1;;;;;1332:81:1;;;;;;;;;;;;;;826:98;;;;;;;;;;;;;;;;-1:-1:-1;826:98:1;-1:-1:-1;;;;;826:98:1;;:::i;1016:265::-;1089:14;;-1:-1:-1;;;;;1089:14:1;1075:10;:28;1067:63;;;;;-1:-1:-1;;;1067:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:16;1156:7;;1179:10;-1:-1:-1;;1169:20:1;;;;;;;-1:-1:-1;1195:27:1;;;;;;;1234:42;;-1:-1:-1;;;;;1156:7:1;;;;1179:10;;1156:7;;1234:42;;;1016:265;:::o;1332:81::-;1379:7;1401;-1:-1:-1;;;;;1401:7:1;1332:81;:::o;826:98::-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;:::-;826:98:::0;:::o;1730:111::-;1802:7;;-1:-1:-1;;;;;1802:7:1;1788:10;:21;1780:56;;;;;-1:-1:-1;;;1780:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1730:111::o;1497:188::-;-1:-1:-1;;;;;1559:16:1;;1565:10;1559:16;;1551:52;;;;;-1:-1:-1;;;1551:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:14;:19;;-1:-1:-1;;1610:19:1;-1:-1:-1;;;;;1610:19:1;;;;;;;;;-1:-1:-1;1668:7:1;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:1;1497:188;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "144600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "44165",
								"owner()": "1037",
								"transferOwnership(address)": "24351"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 270,
									"end": 351,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 345,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 552,
									"end": 574,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 574,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 610,
									"end": 617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 634,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 634,
									"end": 713,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 674,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 693,
									"end": 705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 674,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 270,
									"end": 351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1575,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1624,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "PUSH",
									"source": 1,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f4a024f0cbe4053bd4c531d6ebe109bb06810c4ffead8a98aab24330677c79e64736f6c63430007060033",
									".code": [
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "79BA5097"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1103,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "4D7573742062652070726F706F736564206F776E657200000000000000000000"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 916,
											"end": 918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1575,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1624,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":{\"keccak256\":\"0xba5a8452dcb14e3fecb9f39e415db6cd8b45cbe0a03899febe4f5e715396a9cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321c4997e9d7248386b6946ce113ba586ab8f2bf57bb793c07abf0a5e9f80b76\",\"dweb:/ipfs/QmPMUYFm5iUQcEehh1woqH4jNWy2sEPU1fPSVUc76NJrRR\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0xd9c444260e0ed47bfcf49f269fa52af499e6707b741ae49c7d79e49168c9e4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36aee63c481b52c4420d08135eef232102cf6d68435a3b00b21c87d1f1e2b050\",\"dweb:/ipfs/QmcAXNtqSJvVmsRdgbYfxqDtUZXp8UKK4kJg8C3cVf9FUo\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0x5b0ba0302a06c80ff88368c02dab44a0d9b735a599ba6ff905284044f02f2932\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0163141ba0751e2f2cfd064e7bc4df7b0d586dafd4df2bff86a10d12f0c85ea2\",\"dweb:/ipfs/QmUUxa983fJ6sRJEeBqnXsZ9XVu88KsL4fdhGTZQqVrwmb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol:ConfirmedOwner",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol:ConfirmedOwner",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address, pending."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol": {
				"ConfirmedOwnerWithProposal": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The ConfirmedOwner contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":213:1990  contract ConfirmedOwnerWithProposal is OwnableInterface {... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":486:717  constructor(address newOwner, address pendingOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  swap1\n  swap2\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":552:574  newOwner != address(0) */\n  dup3\n  and\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":544:603  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_5\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x18\n  0x24\n  dup3\n  add\n  mstore\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_5:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":610:617  s_owner */\n  0x00\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":610:628  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":638:664  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":634:713  if (pendingOwner != address(0)) {... */\n  tag_7\n  jumpi\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:706  _transferOwnership(pendingOwner) */\n  tag_7\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":693:705  pendingOwner */\n  dup2\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:692  _transferOwnership */\n  tag_8\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:706  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_7:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":486:717  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":213:1990  contract ConfirmedOwnerWithProposal is OwnableInterface {... */\n  jump(tag_9)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\ntag_8:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n  dup2\n  and\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1565:1575  msg.sender */\n  caller\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n  eq\n  iszero\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1551:1603  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_11\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x17\n  0x24\n  dup3\n  add\n  mstore\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_11:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1624  s_pendingOwner */\n  0x01\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n  dup1\n  sload\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n  and\n  swap2\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":213:1990  contract ConfirmedOwnerWithProposal is OwnableInterface {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":213:1990  contract ConfirmedOwnerWithProposal is OwnableInterface {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_12\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n    tag_7:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1089:1103  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1075:1085  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1075:1103  msg.sender == s_pendingOwner */\n      eq\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1067:1130  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_14\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x4d7573742062652070726f706f736564206f776e657200000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_14:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1137:1153  address oldOwner */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      dup1\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1179:1189  msg.sender */\n      caller\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1169:1189  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1195:1222  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1234:1276  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1179:1189  msg.sender */\n      swap1\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      dup4\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1234:1276  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n    tag_9:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1379:1386  address */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1401:1408  s_owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n    tag_12:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      tag_17\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1974  _validateOwnership */\n      tag_18\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      jump\t// in\n    tag_17:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:919  _transferOwnership(to) */\n      tag_20\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":916:918  to */\n      dup2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:915  _transferOwnership */\n      tag_21\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:919  _transferOwnership(to) */\n      jump\t// in\n    tag_20:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1730:1841  function _validateOwnership() internal view {... */\n    tag_18:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1802:1809  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1788:1798  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1788:1809  msg.sender == s_owner */\n      eq\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1780:1836  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_23\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_23:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1730:1841  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n      dup2\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1565:1575  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n      eq\n      iszero\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1551:1603  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_25\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_25:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1624  s_pendingOwner */\n      0x01\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n      dup1\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n      and\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b6571bf75629e3edd7fbe0786edc26b67662a587dd88c6a55f3af8b32e2f9b264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161045f38038061045f8339818101604052604081101561003357600080fd5b5080516020909101516001600160a01b038216610097576040805162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100c7576100c7816100ce565b505061017d565b6001600160a01b03811633141561012c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6102d38061018c6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861015d565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661016c565b6001546001600160a01b031633146100f9576040805162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b600080543373ffffffffffffffffffffffffffffffffffffffff19808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6000546001600160a01b031690565b610174610180565b61017d816101e1565b50565b6000546001600160a01b031633146101df576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b565b6001600160a01b03811633141561023f576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a35056fea26469706673582212202b6571bf75629e3edd7fbe0786edc26b67662a587dd88c6a55f3af8b32e2f9b264736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x45F CODESIZE SUB DUP1 PUSH2 0x45F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x97 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xC7 JUMPI PUSH2 0xC7 DUP2 PUSH2 0xCE JUMP JUMPDEST POP POP PUSH2 0x17D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x12C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x2D3 DUP1 PUSH2 0x18C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17D DUP2 PUSH2 0x1E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x23F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH6 0x71BF75629E3E 0xDD PUSH32 0xBE0786EDC26B67662A587DD88C6A55F3AF8B32E2F9B264736F6C634300070600 CALLER ",
							"sourceMap": "213:1777:1:-:0;;;486:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;486:231:1;;;;;;;-1:-1:-1;;;;;552:22:1;;544:59;;;;;-1:-1:-1;;;544:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;610:7;:18;;-1:-1:-1;;;;;;610:18:1;-1:-1:-1;;;;;610:18:1;;;;;;;;;;638:26;;;634:79;;674:32;693:12;674:18;:32::i;:::-;486:231;;213:1777;;1497:188;-1:-1:-1;;;;;1559:16:1;;1565:10;1559:16;;1551:52;;;;;-1:-1:-1;;;1551:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:14;:19;;-1:-1:-1;;;;;;1610:19:1;-1:-1:-1;;;;;1610:19:1;;;;;;;;;-1:-1:-1;1668:7:1;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:1;1497:188;:::o;213:1777::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861015d565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661016c565b6001546001600160a01b031633146100f9576040805162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b600080543373ffffffffffffffffffffffffffffffffffffffff19808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6000546001600160a01b031690565b610174610180565b61017d816101e1565b50565b6000546001600160a01b031633146101df576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b565b6001600160a01b03811633141561023f576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a35056fea26469706673582212202b6571bf75629e3edd7fbe0786edc26b67662a587dd88c6a55f3af8b32e2f9b264736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x17D DUP2 PUSH2 0x1E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x23F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH6 0x71BF75629E3E 0xDD PUSH32 0xBE0786EDC26B67662A587DD88C6A55F3AF8B32E2F9B264736F6C634300070600 CALLER ",
							"sourceMap": "213:1777:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:265;;;:::i;:::-;;1332:81;;;:::i;:::-;;;;-1:-1:-1;;;;;1332:81:1;;;;;;;;;;;;;;826:98;;;;;;;;;;;;;;;;-1:-1:-1;826:98:1;-1:-1:-1;;;;;826:98:1;;:::i;1016:265::-;1089:14;;-1:-1:-1;;;;;1089:14:1;1075:10;:28;1067:63;;;;;-1:-1:-1;;;1067:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:16;1156:7;;1179:10;-1:-1:-1;;1169:20:1;;;;;;;-1:-1:-1;1195:27:1;;;;;;;1234:42;;-1:-1:-1;;;;;1156:7:1;;;;1179:10;;1156:7;;1234:42;;;1016:265;:::o;1332:81::-;1379:7;1401;-1:-1:-1;;;;;1401:7:1;1332:81;:::o;826:98::-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;:::-;826:98:::0;:::o;1730:111::-;1802:7;;-1:-1:-1;;;;;1802:7:1;1788:10;:21;1780:56;;;;;-1:-1:-1;;;1780:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1730:111::o;1497:188::-;-1:-1:-1;;;;;1559:16:1;;1565:10;1559:16;;1551:52;;;;;-1:-1:-1;;;1551:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:14;:19;;-1:-1:-1;;1610:19:1;-1:-1:-1;;;;;1610:19:1;;;;;;;;;-1:-1:-1;1668:7:1;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:1;1497:188;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "144600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "44165",
								"owner()": "1037",
								"transferOwnership(address)": "24351"
							},
							"internal": {
								"_transferOwnership(address)": "infinite",
								"_validateOwnership()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 213,
									"end": 1990,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 486,
									"end": 717,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 552,
									"end": 574,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 574,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 610,
									"end": 617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 634,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 634,
									"end": 713,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 674,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 693,
									"end": 705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 674,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1575,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1624,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "PUSH",
									"source": 1,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 1990,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b6571bf75629e3edd7fbe0786edc26b67662a587dd88c6a55f3af8b32e2f9b264736f6c63430007060033",
									".code": [
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "79BA5097"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 1990,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1103,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "4D7573742062652070726F706F736564206F776E657200000000000000000000"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 916,
											"end": 918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1575,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1624,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0xd9c444260e0ed47bfcf49f269fa52af499e6707b741ae49c7d79e49168c9e4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36aee63c481b52c4420d08135eef232102cf6d68435a3b00b21c87d1f1e2b050\",\"dweb:/ipfs/QmcAXNtqSJvVmsRdgbYfxqDtUZXp8UKK4kJg8C3cVf9FUo\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0x5b0ba0302a06c80ff88368c02dab44a0d9b735a599ba6ff905284044f02f2932\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0163141ba0751e2f2cfd064e7bc4df7b0d586dafd4df2bff86a10d12f0c85ea2\",\"dweb:/ipfs/QmUUxa983fJ6sRJEeBqnXsZ9XVu88KsL4fdhGTZQqVrwmb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address, pending."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol": {
				"AggregatorProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "aggregatorAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previous",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "latest",
									"type": "address"
								}
							],
							"name": "AggregatorConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "current",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposed",
									"type": "address"
								}
							],
							"name": "AggregatorProposed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int256",
									"name": "current",
									"type": "int256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"name": "AnswerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "startedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								}
							],
							"name": "NewRound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aggregator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "aggregatorAddress",
									"type": "address"
								}
							],
							"name": "confirmAggregator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "id",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "id",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "phaseId",
									"type": "uint16"
								}
							],
							"name": "phaseAggregators",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "phaseId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "aggregatorAddress",
									"type": "address"
								}
							],
							"name": "proposeAggregator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proposedAggregator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								}
							],
							"name": "proposedGetRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "id",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proposedLatestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "id",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"confirmAggregator(address)": {
								"details": "Reverts if the given address doesn't match what was previously proposed",
								"params": {
									"aggregatorAddress": "The new address for the aggregator contract"
								}
							},
							"getAnswer(uint256)": {
								"details": "#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.",
								"params": {
									"roundId": "the answer number to retrieve the answer for"
								}
							},
							"getRoundData(uint80)": {
								"details": "Note that answer and updatedAt may change between queries.",
								"params": {
									"roundId": "the requested round ID as presented through the proxy, this is made up of the aggregator's round ID with the phase ID encoded in the two highest order bytes"
								},
								"returns": {
									"answer": "is the answer for the given round",
									"answeredInRound": "is the round ID of the round in which the answer was computed. (Only some AggregatorV3Interface implementations return meaningful values)",
									"id": "is the round ID from the aggregator for which the data was retrieved combined with an phase to ensure that round IDs get larger as time moves forward.",
									"startedAt": "is the timestamp when the round was started. (Only some AggregatorV3Interface implementations return meaningful values)",
									"updatedAt": "is the timestamp when the round last was updated (i.e. answer was last computed)"
								}
							},
							"getTimestamp(uint256)": {
								"details": "#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.",
								"params": {
									"roundId": "the answer number to retrieve the updated timestamp for"
								}
							},
							"latestAnswer()": {
								"details": "#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
							},
							"latestRound()": {
								"details": "#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
							},
							"latestRoundData()": {
								"details": "Note that answer and updatedAt may change between queries.",
								"returns": {
									"answer": "is the answer for the given round",
									"answeredInRound": "is the round ID of the round in which the answer was computed. (Only some AggregatorV3Interface implementations return meaningful values)",
									"id": "is the round ID from the aggregator for which the data was retrieved combined with an phase to ensure that round IDs get larger as time moves forward.",
									"startedAt": "is the timestamp when the round was started. (Only some AggregatorV3Interface implementations return meaningful values)",
									"updatedAt": "is the timestamp when the round last was updated (i.e. answer was last computed)"
								}
							},
							"latestTimestamp()": {
								"details": "#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
							},
							"phaseAggregators(uint16)": {
								"params": {
									"phaseId": "uint16"
								}
							},
							"proposeAggregator(address)": {
								"params": {
									"aggregatorAddress": "The new address for the aggregator contract"
								}
							},
							"proposedGetRoundData(uint80)": {
								"params": {
									"roundId": "the round ID to retrieve the round data for"
								},
								"returns": {
									"answer": "is the answer for the given round",
									"answeredInRound": "is the round ID of the round in which the answer was computed.",
									"id": "is the round ID for which data was retrieved",
									"startedAt": "is the timestamp when the round was started. (Only some AggregatorV3Interface implementations return meaningful values)",
									"updatedAt": "is the timestamp when the round last was updated (i.e. answer was last computed)"
								}
							},
							"proposedLatestRoundData()": {
								"returns": {
									"answer": "is the answer for the given round",
									"answeredInRound": "is the round ID of the round in which the answer was computed.",
									"id": "is the round ID for which data was retrieved",
									"startedAt": "is the timestamp when the round was started. (Only some AggregatorV3Interface implementations return meaningful values)",
									"updatedAt": "is the timestamp when the round last was updated (i.e. answer was last computed)"
								}
							}
						},
						"title": "A trusted proxy for updating where current answers are read from",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":395:13716  contract AggregatorProxy is AggregatorProxyInterface, ConfirmedOwner {... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1031:1140  constructor(address aggregatorAddress) ConfirmedOwner(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1085:1095  msg.sender */\n  caller\n  dup1\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":345:346  0 */\n  0x00\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":552:574  newOwner != address(0) */\n  dup2\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":544:603  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_7\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x18\n  0x24\n  dup3\n  add\n  mstore\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_7:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":610:617  s_owner */\n  0x00\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":610:628  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":638:664  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":634:713  if (pendingOwner != address(0)) {... */\n  tag_9\n  jumpi\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:706  _transferOwnership(pendingOwner) */\n  tag_9\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":693:705  pendingOwner */\n  dup2\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:692  _transferOwnership */\n  tag_10\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":674:706  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_9:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":486:717  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":270:351  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  pop\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1103:1135  setAggregator(aggregatorAddress) */\n  tag_13\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1117:1134  aggregatorAddress */\n  dup2\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1103:1116  setAggregator */\n  shl(0x20, tag_14)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1103:1135  setAggregator(aggregatorAddress) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1031:1140  constructor(address aggregatorAddress) ConfirmedOwner(msg.sender) {... */\n  pop\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":395:13716  contract AggregatorProxy is AggregatorProxyInterface, ConfirmedOwner {... */\n  jump(tag_15)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n  dup2\n  and\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1565:1575  msg.sender */\n  caller\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n  eq\n  iszero\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1551:1603  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_17\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x17\n  0x24\n  dup3\n  add\n  mstore\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_17:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1624  s_pendingOwner */\n  0x01\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n  dup1\n  sload\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n  and\n  swap2\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12477:12731  function setAggregator(address aggregatorAddress) internal {... */\ntag_14:\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12554:12568  s_currentPhase */\n  0x04\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12554:12571  s_currentPhase.id */\n  dup1\n  sload\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12598:12652  Phase(id, AggregatorProxyInterface(aggregatorAddress)) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12554:12571  s_currentPhase.id */\n  0x01\n  0xffff\n  dup1\n  dup6\n  and\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12554:12575  s_currentPhase.id + 1 */\n  swap2\n  swap1\n  swap2\n  add\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12598:12652  Phase(id, AggregatorProxyInterface(aggregatorAddress)) */\n  and\n  dup1\n  dup3\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  swap1\n  swap6\n  and\n  0x20\n  swap2\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  not(0xffff)\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12581:12652  s_currentPhase = Phase(id, AggregatorProxyInterface(aggregatorAddress)) */\n  swap1\n  swap4\n  and\n  dup6\n  or\n  not(sub(shl(0xb0, 0x01), 0x010000))\n  and\n  0x010000\n  dup5\n  mul\n  or\n  swap1\n  swap4\n  sstore\n  0x00\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12658:12680  s_phaseAggregators[id] */\n  swap4\n  dup5\n  mstore\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12658:12676  s_phaseAggregators */\n  0x03\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12658:12680  s_phaseAggregators[id] */\n  swap1\n  swap3\n  mstore\n  swap2\n  keccak256\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12658:12726  s_phaseAggregators[id] = AggregatorProxyInterface(aggregatorAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12477:12731  function setAggregator(address aggregatorAddress) internal {... */\n  jump\t// out\n    /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":395:13716  contract AggregatorProxy is AggregatorProxyInterface, ConfirmedOwner {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":395:13716  contract AggregatorProxy is AggregatorProxyInterface, ConfirmedOwner {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb633620c\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf8a2abd3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfeaf968c\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0xb633620c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc1597304\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe8c4be30\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x9a6fc8f5\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x9a6fc8f5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa928c096\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb5ab58dc\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8f6b4d91\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x6001ac53\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x7284e416\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x7284e416\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8205bf6a\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x6001ac53\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x668a0f02\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x50d25bcd\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x50d25bcd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x58303b10\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x245a7bfc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10040:10155  function aggregator() external view override returns (address) {... */\n    tag_3:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10409:10522  function decimals() external view override returns (uint8) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1523:1658  function latestAnswer() public view virtual override returns (int256 answer) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10632:10745  function version() external view override returns (uint256) {... */\n    tag_6:\n      tag_35\n      tag_38\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10216:10310  function phaseId() external view override returns (uint16) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      0xffff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8814:9122  function proposedGetRoundData(uint80 roundId)... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      calldataload\n      0xffffffffffffffffffff\n      and\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4333:4551  function latestRound() public view virtual override returns (uint256 roundId) {... */\n    tag_9:\n      tag_35\n      tag_45\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10837:10964  function description() external view override returns (string memory) {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_48:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_48)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_51:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2046:2191  function latestTimestamp() public view virtual override returns (uint256 updatedAt) {... */\n    tag_12:\n      tag_35\n      tag_55\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n    tag_13:\n      tag_31\n      tag_57\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9670:9963  function proposedLatestRoundData()... */\n    tag_14:\n      tag_41\n      tag_59\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":5982:6482  function getRoundData(uint80 roundId)... */\n    tag_15:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      calldataload\n      0xffffffffffffffffffff\n      and\n      tag_62\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12064:12447  function confirmAggregator(address aggregatorAddress) external onlyOwner {... */\n    tag_16:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_65\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2602:2978  function getAnswer(uint256 roundId) public view virtual override returns (int256 answer) {... */\n    tag_17:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      calldataload\n      tag_68\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3428:3814  function getTimestamp(uint256 roundId) public view virtual override returns (uint256 updatedAt) {... */\n    tag_18:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      calldataload\n      tag_71\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11256:11393  function phaseAggregators(uint16 phaseId) external view override returns (address) {... */\n    tag_19:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      calldataload\n      0xffff\n      and\n      tag_74\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11033:11151  function proposedAggregator() external view override returns (address) {... */\n    tag_20:\n      tag_31\n      tag_76\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n    tag_21:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_79\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11557:11791  function proposeAggregator(address aggregatorAddress) external onlyOwner {... */\n    tag_22:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_82\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":7735:8202  function latestRoundData()... */\n    tag_23:\n      tag_41\n      tag_84\n      jump\t// in\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10040:10155  function aggregator() external view override returns (address) {... */\n    tag_32:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10124:10138  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10124:10149  s_currentPhase.aggregator */\n      sload\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10040:10155  function aggregator() external view override returns (address) {... */\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10409:10522  function decimals() external view override returns (uint8) {... */\n    tag_34:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10461:10466  uint8 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10481:10495  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10481:10506  s_currentPhase.aggregator */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10481:10515  s_currentPhase.aggregator.decimals */\n      and\n      0x313ce567\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10481:10517  s_currentPhase.aggregator.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      mload\n      swap1\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10409:10522  function decimals() external view override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1523:1658  function latestAnswer() public view virtual override returns (int256 answer) {... */\n    tag_36:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1585:1598  int256 answer */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1613:1627  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1613:1638  s_currentPhase.aggregator */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1613:1651  s_currentPhase.aggregator.latestAnswer */\n      and\n      0x50d25bcd\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":1613:1653  s_currentPhase.aggregator.latestAnswer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10632:10745  function version() external view override returns (uint256) {... */\n    tag_38:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10683:10690  uint256 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10705:10719  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10705:10730  s_currentPhase.aggregator */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10705:10738  s_currentPhase.aggregator.version */\n      and\n      0x54fd4d50\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10705:10740  s_currentPhase.aggregator.version() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10216:10310  function phaseId() external view override returns (uint16) {... */\n    tag_40:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10288:10302  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10288:10305  s_currentPhase.id */\n      sload\n      0xffff\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10216:10310  function phaseId() external view override returns (uint16) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8814:9122  function proposedGetRoundData(uint80 roundId)... */\n    tag_43:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13632:13652  s_proposedAggregator */\n      sload(0x02)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8943:8952  uint80 id */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13632:13652  s_proposedAggregator */\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13616:13702  require(address(s_proposedAggregator) != address(0), \"No proposed aggregator present\") */\n      tag_103\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f2070726f706f7365642061676772656761746f722070726573656e740000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_103:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9075:9095  s_proposedAggregator */\n      sload(0x02)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9075:9117  s_proposedAggregator.getRoundData(roundId) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x9a6fc8f5)\n      dup2\n      mstore\n      0xffffffffffffffffffff\n      dup10\n      and\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9075:9095  s_proposedAggregator */\n      swap1\n      swap3\n      and\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9075:9108  s_proposedAggregator.getRoundData */\n      0x9a6fc8f5\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9075:9117  s_proposedAggregator.getRoundData(roundId) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0xa0\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9075:9095  s_proposedAggregator */\n      dup7\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9075:9117  s_proposedAggregator.getRoundData(roundId) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      dup1\n      mload\n      0x20\n      dup3\n      add\n      mload\n      0x40\n      dup4\n      add\n      mload\n      0x60\n      dup5\n      add\n      mload\n      0x80\n      swap1\n      swap5\n      add\n      mload\n      swap3\n      swap11\n      swap2\n      swap10\n      pop\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8814:9122  function proposedGetRoundData(uint80 roundId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4333:4551  function latestRound() public view virtual override returns (uint256 roundId) {... */\n    tag_45:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4417:4452  Phase memory phase = s_currentPhase */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4438:4452  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4417:4452  Phase memory phase = s_currentPhase */\n      dup1\n      sload\n      0xffff\n      dup2\n      and\n      dup1\n      dup5\n      mstore\n      0x010000\n      swap1\n      swap2\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      swap1\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4514:4544  phase.aggregator.latestRound() */\n      dup6\n      mload\n      0x668a0f0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap6\n      mload\n      0x00\n      swap7\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4488:4546  addPhase(phase.id, uint64(phase.aggregator.latestRound())) */\n      tag_110\n      swap6\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4514:4542  phase.aggregator.latestRound */\n      0x668a0f02\n      swap4\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4514:4544  phase.aggregator.latestRound() */\n      dup3\n      dup3\n      add\n      swap4\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4417:4452  Phase memory phase = s_currentPhase */\n      swap1\n      swap3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4514:4544  phase.aggregator.latestRound() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4417:4452  Phase memory phase = s_currentPhase */\n      dup7\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4514:4544  phase.aggregator.latestRound() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      mload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4488:4496  addPhase */\n      tag_115\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4488:4546  addPhase(phase.id, uint64(phase.aggregator.latestRound())) */\n      jump\t// in\n    tag_110:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4481:4546  return addPhase(phase.id, uint64(phase.aggregator.latestRound())) */\n      0xffffffffffffffffffff\n      and\n      swap2\n      pop\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":4333:4551  function latestRound() public view virtual override returns (uint256 roundId) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10837:10964  function description() external view override returns (string memory) {... */\n    tag_47:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10892:10905  string memory */\n      0x60\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10920:10934  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10920:10945  s_currentPhase.aggregator */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10920:10957  s_currentPhase.aggregator.description */\n      and\n      0x7284e416\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10920:10959  s_currentPhase.aggregator.description() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      0x20\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      swap1\n      dup4\n      add\n      swap1\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      dup3\n      mload\n      0x0100000000\n      dup2\n      gt\n      dup3\n      dup3\n      add\n      dup9\n      lt\n      or\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      dup3\n      mstore\n      pop\n      dup2\n      mload\n      0x20\n      swap2\n      dup3\n      add\n      swap3\n      swap1\n      swap2\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_124:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_126\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_124)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_127:\n      pop\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10913:10959  return s_currentPhase.aggregator.description() */\n      swap1\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":10837:10964  function description() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n    tag_53:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1089:1103  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1075:1085  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1075:1103  msg.sender == s_pendingOwner */\n      eq\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1067:1130  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_129\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x4d7573742062652070726f706f736564206f776e657200000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_129:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1137:1153  address oldOwner */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      dup1\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1179:1189  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1169:1189  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1195:1222  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1234:1276  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1179:1189  msg.sender */\n      swap1\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1156:1163  s_owner */\n      dup4\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1234:1276  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1016:1281  function acceptOwnership() external override {... */\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2046:2191  function latestTimestamp() public view virtual override returns (uint256 updatedAt) {... */\n    tag_55:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2111:2128  uint256 updatedAt */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2143:2157  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2143:2168  s_currentPhase.aggregator */\n      0x00\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2143:2184  s_currentPhase.aggregator.latestTimestamp */\n      and\n      0x8205bf6a\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2143:2186  s_currentPhase.aggregator.latestTimestamp() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n    tag_57:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1379:1386  address */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1401:1408  s_owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1332:1413  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9670:9963  function proposedLatestRoundData()... */\n    tag_59:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13632:13652  s_proposedAggregator */\n      sload(0x02)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9788:9797  uint80 id */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13632:13652  s_proposedAggregator */\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13616:13702  require(address(s_proposedAggregator) != address(0), \"No proposed aggregator present\") */\n      tag_137\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f2070726f706f7365642061676772656761746f722070726573656e740000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_137:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9920:9940  s_proposedAggregator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9920:9956  s_proposedAggregator.latestRoundData */\n      and\n      0xfeaf968c\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9920:9958  s_proposedAggregator.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      dup1\n      mload\n      0x20\n      dup3\n      add\n      mload\n      0x40\n      dup4\n      add\n      mload\n      0x60\n      dup5\n      add\n      mload\n      0x80\n      swap1\n      swap5\n      add\n      mload\n      swap3\n      swap10\n      swap2\n      swap9\n      pop\n      swap7\n      pop\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":9670:9963  function proposedLatestRoundData()... */\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":5982:6482  function getRoundData(uint80 roundId)... */\n    tag_62:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6085:6094  uint80 id */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6102:6115  int256 answer */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6123:6140  uint256 startedAt */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6148:6165  uint256 updatedAt */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6173:6195  uint80 answeredInRound */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6211:6225  uint16 phaseId */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6227:6251  uint64 aggregatorRoundId */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6255:6272  parseIds(roundId) */\n      tag_144\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6264:6271  roundId */\n      dup9\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6255:6272  parseIds(roundId) */\n      0xffffffffffffffffffff\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6255:6263  parseIds */\n      tag_145\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6255:6272  parseIds(roundId) */\n      jump\t// in\n    tag_144:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6360  s_phaseAggregators[phaseId] */\n      0xffff\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6351  s_phaseAggregators */\n      0x03\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6360  s_phaseAggregators[phaseId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6392  s_phaseAggregators[phaseId].getRoundData(aggregatorRoundId) */\n      dup2\n      mload\n      shl(0xe0, 0x9a6fc8f5)\n      dup2\n      mstore\n      0xffffffffffffffff\n      dup5\n      and\n      0x04\n      dup3\n      add\n      mstore\n      swap2\n      mload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6210:6272  (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId) */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6360  s_phaseAggregators[phaseId] */\n      swap1\n      swap2\n      and\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6373  s_phaseAggregators[phaseId].getRoundData */\n      0x9a6fc8f5\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6392  s_phaseAggregators[phaseId].getRoundData(aggregatorRoundId) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0xa0\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6360  s_phaseAggregators[phaseId] */\n      dup7\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6392  s_phaseAggregators[phaseId].getRoundData(aggregatorRoundId) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      dup1\n      mload\n      0x20\n      dup3\n      add\n      mload\n      0x40\n      dup4\n      add\n      mload\n      0x60\n      dup5\n      add\n      mload\n      0x80\n      swap1\n      swap5\n      add\n      mload\n      swap3\n      swap11\n      pop\n      swap1\n      swap9\n      pop\n      swap7\n      pop\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6406:6477  addPhaseIds(id, answer, startedAt, updatedAt, answeredInRound, phaseId) */\n      tag_150\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6333:6392  s_phaseAggregators[phaseId].getRoundData(aggregatorRoundId) */\n      dup8\n      dup8\n      dup8\n      dup8\n      dup8\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6469:6476  phaseId */\n      dup8\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6406:6417  addPhaseIds */\n      tag_151\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6406:6477  addPhaseIds(id, answer, startedAt, updatedAt, answeredInRound, phaseId) */\n      jump\t// in\n    tag_150:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":6399:6477  return addPhaseIds(id, answer, startedAt, updatedAt, answeredInRound, phaseId) */\n      swap4\n      swap13\n      swap3\n      swap12\n      pop\n      swap1\n      swap10\n      pop\n      swap8\n      pop\n      swap1\n      swap6\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":5982:6482  function getRoundData(uint80 roundId)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12064:12447  function confirmAggregator(address aggregatorAddress) external onlyOwner {... */\n    tag_65:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      tag_153\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1974  _validateOwnership */\n      tag_154\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      jump\t// in\n    tag_153:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12180:12200  s_proposedAggregator */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12151:12201  aggregatorAddress == address(s_proposedAggregator) */\n      dup3\n      dup2\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12180:12200  s_proposedAggregator */\n      swap2\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12151:12201  aggregatorAddress == address(s_proposedAggregator) */\n      eq\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12143:12233  require(aggregatorAddress == address(s_proposedAggregator), \"Invalid proposed aggregator\") */\n      tag_156\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c69642070726f706f7365642061676772656761746f720000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_156:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12276:12290  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12276:12301  s_currentPhase.aggregator */\n      sload\n      0x02\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12308:12335  delete s_proposedAggregator */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12276:12301  s_currentPhase.aggregator */\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12341:12373  setAggregator(aggregatorAddress) */\n      tag_157\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12355:12372  aggregatorAddress */\n      dup3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12341:12354  setAggregator */\n      tag_158\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12341:12373  setAggregator(aggregatorAddress) */\n      jump\t// in\n    tag_157:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12424:12441  aggregatorAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12384:12442  AggregatorConfirmed(previousAggregator, aggregatorAddress) */\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12404:12422  previousAggregator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12384:12442  AggregatorConfirmed(previousAggregator, aggregatorAddress) */\n      and\n      0x33745f67a407dcb785417f9c123dd3641479a102674b6e35c1f10975625b90e9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1982:1983  _ */\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12064:12447  function confirmAggregator(address aggregatorAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2602:2978  function getAnswer(uint256 roundId) public view virtual override returns (int256 answer) {... */\n    tag_68:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2676:2689  int256 answer */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":833:867  2**(PHASE_OFFSET + PHASE_SIZE) - 1 */\n      0xffffffffffffffffffff\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2701:2717  roundId > MAX_ID */\n      dup3\n      gt\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2697:2727  if (roundId > MAX_ID) return 0 */\n      iszero\n      tag_160\n      jumpi\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2726:2727  0 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2719:2727  return 0 */\n      jump(tag_159)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2697:2727  if (roundId > MAX_ID) return 0 */\n    tag_160:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2735:2749  uint16 phaseId */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2751:2775  uint64 aggregatorRoundId */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2779:2796  parseIds(roundId) */\n      tag_161\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2788:2795  roundId */\n      dup5\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2779:2787  parseIds */\n      tag_145\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2779:2796  parseIds(roundId) */\n      jump\t// in\n    tag_161:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2840:2867  s_phaseAggregators[phaseId] */\n      0xffff\n      dup3\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2802:2837  AggregatorProxyInterface aggregator */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2840:2867  s_phaseAggregators[phaseId] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2840:2858  s_phaseAggregators */\n      0x03\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2840:2867  s_phaseAggregators[phaseId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2734:2796  (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId) */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2840:2867  s_phaseAggregators[phaseId] */\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2877:2910  address(aggregator) == address(0) */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2873:2920  if (address(aggregator) == address(0)) return 0 */\n      tag_162\n      jumpi\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2919:2920  0 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2912:2920  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_159)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2873:2920  if (address(aggregator) == address(0)) return 0 */\n    tag_162:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2934:2944  aggregator */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2934:2954  aggregator.getAnswer */\n      and\n      0xb5ab58dc\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2955:2972  aggregatorRoundId */\n      dup4\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2934:2973  aggregator.getAnswer(aggregatorRoundId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      mload\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":2602:2978  function getAnswer(uint256 roundId) public view virtual override returns (int256 answer) {... */\n    tag_159:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3428:3814  function getTimestamp(uint256 roundId) public view virtual override returns (uint256 updatedAt) {... */\n    tag_71:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3505:3522  uint256 updatedAt */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":833:867  2**(PHASE_OFFSET + PHASE_SIZE) - 1 */\n      0xffffffffffffffffffff\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3534:3550  roundId > MAX_ID */\n      dup3\n      gt\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3530:3560  if (roundId > MAX_ID) return 0 */\n      iszero\n      tag_168\n      jumpi\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3559:3560  0 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3552:3560  return 0 */\n      jump(tag_159)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3530:3560  if (roundId > MAX_ID) return 0 */\n    tag_168:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3568:3582  uint16 phaseId */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3584:3608  uint64 aggregatorRoundId */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3612:3629  parseIds(roundId) */\n      tag_169\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3621:3628  roundId */\n      dup5\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3612:3620  parseIds */\n      tag_145\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3612:3629  parseIds(roundId) */\n      jump\t// in\n    tag_169:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3673:3700  s_phaseAggregators[phaseId] */\n      0xffff\n      dup3\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3635:3670  AggregatorProxyInterface aggregator */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3673:3700  s_phaseAggregators[phaseId] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3673:3691  s_phaseAggregators */\n      0x03\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3673:3700  s_phaseAggregators[phaseId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3567:3629  (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId) */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3673:3700  s_phaseAggregators[phaseId] */\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3710:3743  address(aggregator) == address(0) */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3706:3753  if (address(aggregator) == address(0)) return 0 */\n      tag_170\n      jumpi\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3752:3753  0 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3745:3753  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_159)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3706:3753  if (address(aggregator) == address(0)) return 0 */\n    tag_170:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3767:3777  aggregator */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3767:3790  aggregator.getTimestamp */\n      and\n      0xb633620c\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3791:3808  aggregatorRoundId */\n      dup4\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":3767:3809  aggregator.getTimestamp(aggregatorRoundId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11256:11393  function phaseAggregators(uint16 phaseId) external view override returns (address) {... */\n    tag_74:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11360:11387  s_phaseAggregators[phaseId] */\n      0xffff\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11330:11337  address */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11360:11387  s_phaseAggregators[phaseId] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11360:11378  s_phaseAggregators */\n      0x03\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11360:11387  s_phaseAggregators[phaseId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11256:11393  function phaseAggregators(uint16 phaseId) external view override returns (address) {... */\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11033:11151  function proposedAggregator() external view override returns (address) {... */\n    tag_76:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11125:11145  s_proposedAggregator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11033:11151  function proposedAggregator() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n    tag_79:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      tag_178\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1974  _validateOwnership */\n      tag_154\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      jump\t// in\n    tag_178:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:919  _transferOwnership(to) */\n      tag_180\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":916:918  to */\n      dup2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:915  _transferOwnership */\n      tag_181\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":897:919  _transferOwnership(to) */\n      jump\t// in\n    tag_180:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":826:924  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11557:11791  function proposeAggregator(address aggregatorAddress) external onlyOwner {... */\n    tag_82:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      tag_183\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1974  _validateOwnership */\n      tag_154\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1956:1976  _validateOwnership() */\n      jump\t// in\n    tag_183:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11636:11656  s_proposedAggregator */\n      0x02\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11636:11702  s_proposedAggregator = AggregatorProxyInterface(aggregatorAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11740:11754  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11740:11765  s_currentPhase.aggregator */\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11713:11786  AggregatorProposed(address(s_currentPhase.aggregator), aggregatorAddress) */\n      mload(0x40)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11636:11702  s_proposedAggregator = AggregatorProxyInterface(aggregatorAddress) */\n      swap2\n      swap3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11740:11765  s_currentPhase.aggregator */\n      0x010000\n      swap1\n      swap2\n      div\n      and\n      swap1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11713:11786  AggregatorProposed(address(s_currentPhase.aggregator), aggregatorAddress) */\n      0xc0f151710f03d713b71d9970cee0d5b11ddc9a7552abaa3f6ee818010f21600d\n      swap1\n      0x00\n      swap1\n      log3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":11557:11791  function proposeAggregator(address aggregatorAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":7735:8202  function latestRoundData()... */\n    tag_84:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":7952:7989  Phase memory current = s_currentPhase */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":7975:7989  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":7952:7989  Phase memory current = s_currentPhase */\n      dup1\n      sload\n      0xffff\n      dup2\n      and\n      dup4\n      mstore\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8073:8109  current.aggregator.latestRoundData() */\n      dup4\n      mload\n      0xfeaf968c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap4\n      mload\n      0x00\n      swap5\n      dup6\n      swap5\n      dup6\n      swap5\n      dup6\n      swap5\n      dup6\n      swap5\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":7952:7989  Phase memory current = s_currentPhase */\n      swap3\n      swap4\n      swap1\n      swap3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8073:8107  current.aggregator.latestRoundData */\n      0xfeaf968c\n      swap3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8073:8109  current.aggregator.latestRoundData() */\n      dup3\n      dup2\n      add\n      swap3\n      0xa0\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":7952:7989  Phase memory current = s_currentPhase */\n      dup7\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8073:8109  current.aggregator.latestRoundData() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      dup1\n      mload\n      0x20\n      dup3\n      add\n      mload\n      0x40\n      dup4\n      add\n      mload\n      0x60\n      dup5\n      add\n      mload\n      0x80\n      swap1\n      swap5\n      add\n      mload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8186:8196  current.id */\n      dup6\n      mload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8073:8109  current.aggregator.latestRoundData() */\n      swap4\n      swap11\n      pop\n      swap2\n      swap9\n      pop\n      swap7\n      pop\n      swap2\n      swap5\n      pop\n      swap1\n      swap3\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8123:8197  addPhaseIds(id, answer, startedAt, updatedAt, answeredInRound, current.id) */\n      tag_190\n      swap1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8073:8109  current.aggregator.latestRoundData() */\n      dup8\n      swap1\n      dup8\n      swap1\n      dup8\n      swap1\n      dup8\n      swap1\n      dup8\n      swap1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8123:8134  addPhaseIds */\n      tag_151\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8123:8197  addPhaseIds(id, answer, startedAt, updatedAt, answeredInRound, current.id) */\n      jump\t// in\n    tag_190:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":8116:8197  return addPhaseIds(id, answer, startedAt, updatedAt, answeredInRound, current.id) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":7735:8202  function latestRoundData()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12735:12888  function addPhase(uint16 phase, uint64 originalId) internal pure returns (uint80) {... */\n    tag_115:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12837:12882  (uint256(phase) << PHASE_OFFSET) | originalId */\n      0xffffffffffffffff\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":749:751  64 */\n      0x40\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12838:12868  uint256(phase) << PHASE_OFFSET */\n      swap2\n      swap1\n      swap2\n      shl\n      0xffff0000000000000000\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12837:12882  (uint256(phase) << PHASE_OFFSET) | originalId */\n      or\n      swap1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12735:12888  function addPhase(uint16 phase, uint64 originalId) internal pure returns (uint80) {... */\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12892:13115  function parseIds(uint256 roundId) internal pure returns (uint16, uint64) {... */\n    tag_145:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":749:751  64 */\n      0x40\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12996:13019  roundId >> PHASE_OFFSET */\n      dup2\n      swap1\n      shr\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12892:13115  function parseIds(uint256 roundId) internal pure returns (uint16, uint64) {... */\n      swap2\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13119:13556  function addPhaseIds(... */\n    tag_151:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13319:13325  uint80 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13333:13339  int256 */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13347:13354  uint256 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13362:13369  uint256 */\n      dup1\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13377:13383  uint80 */\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13413:13447  addPhase(phaseId, uint64(roundId)) */\n      tag_194\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13422:13429  phaseId */\n      dup7\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13438:13445  roundId */\n      dup13\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13413:13421  addPhase */\n      tag_115\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13413:13447  addPhase(phaseId, uint64(roundId)) */\n      jump\t// in\n    tag_194:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13455:13461  answer */\n      dup11\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13469:13478  startedAt */\n      dup11\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13486:13495  updatedAt */\n      dup11\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13503:13545  addPhase(phaseId, uint64(answeredInRound)) */\n      tag_195\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13512:13519  phaseId */\n      dup11\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13528:13543  answeredInRound */\n      dup13\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13503:13511  addPhase */\n      tag_115\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13503:13545  addPhase(phaseId, uint64(answeredInRound)) */\n      jump\t// in\n    tag_195:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13398:13551  return (... */\n      swap4\n      swap16\n      swap3\n      swap15\n      pop\n      swap1\n      swap13\n      pop\n      swap11\n      pop\n      swap1\n      swap9\n      pop\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":13119:13556  function addPhaseIds(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1730:1841  function _validateOwnership() internal view {... */\n    tag_154:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1802:1809  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1788:1798  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1788:1809  msg.sender == s_owner */\n      eq\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1780:1836  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_197\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_197:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1730:1841  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12477:12731  function setAggregator(address aggregatorAddress) internal {... */\n    tag_158:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12554:12568  s_currentPhase */\n      0x04\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12554:12571  s_currentPhase.id */\n      dup1\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12598:12652  Phase(id, AggregatorProxyInterface(aggregatorAddress)) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12554:12571  s_currentPhase.id */\n      0x01\n      0xffff\n      dup1\n      dup6\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12554:12575  s_currentPhase.id + 1 */\n      swap2\n      swap1\n      swap2\n      add\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12598:12652  Phase(id, AggregatorProxyInterface(aggregatorAddress)) */\n      and\n      dup1\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      not(0xffff)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12581:12652  s_currentPhase = Phase(id, AggregatorProxyInterface(aggregatorAddress)) */\n      swap1\n      swap4\n      and\n      dup6\n      or\n      0xffffffffffffffffffff0000000000000000000000000000000000000000ffff\n      and\n      0x010000\n      dup5\n      mul\n      or\n      swap1\n      swap4\n      sstore\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12658:12680  s_phaseAggregators[id] */\n      swap4\n      dup5\n      mstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12658:12676  s_phaseAggregators */\n      0x03\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12658:12680  s_phaseAggregators[id] */\n      swap1\n      swap3\n      mstore\n      swap2\n      keccak256\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12658:12726  s_phaseAggregators[id] = AggregatorProxyInterface(aggregatorAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":12477:12731  function setAggregator(address aggregatorAddress) internal {... */\n      jump\t// out\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n      dup2\n      and\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1565:1575  msg.sender */\n      caller\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1559:1575  to != msg.sender */\n      eq\n      iszero\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1551:1603  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_200\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_200:\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1624  s_pendingOwner */\n      0x01\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n      dup1\n      sload\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1610:1629  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1668:1675  s_owner */\n      and\n      swap2\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1641:1680  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":1497:1685  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d8db7d4e7553552ff4112495897c50d33256a94976c197a9134e8a4cb493946364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516113c53803806113c58339818101604052602081101561003357600080fd5b5051338060008161008b576040805162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100bb576100bb816100d3565b5050506100cd8161018260201b60201c565b506101f1565b6001600160a01b038116331415610131576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60048054604080518082018252600161ffff80851691909101168082526001600160a01b0395909516602091820181905261ffff19909316851762010000600160b01b0319166201000084021790935560009384526003909252912080546001600160a01b0319169091179055565b6111c5806102006000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80638da5cb5b116100d8578063b633620c1161008c578063f2fde38b11610066578063f2fde38b146103cb578063f8a2abd3146103f1578063feaf968c1461041757610177565b8063b633620c14610385578063c1597304146103a2578063e8c4be30146103c357610177565b80639a6fc8f5116100bd5780639a6fc8f514610319578063a928c09614610342578063b5ab58dc1461036857610177565b80638da5cb5b146103095780638f6b4d911461031157610177565b80636001ac531161012f5780637284e416116101145780637284e4161461027a57806379ba5097146102f75780638205bf6a1461030157610177565b80636001ac53146101ff578063668a0f021461027257610177565b806350d25bcd1161016057806350d25bcd146101be57806354fd4d50146101d857806358303b10146101e057610177565b8063245a7bfc1461017c578063313ce567146101a0575b600080fd5b61018461041f565b604080516001600160a01b039092168252519081900360200190f35b6101a8610434565b6040805160ff9092168252519081900360200190f35b6101c66104b8565b60408051918252519081900360200190f35b6101c661050b565b6101e861055e565b6040805161ffff9092168252519081900360200190f35b6102286004803603602081101561021557600080fd5b503569ffffffffffffffffffff16610568565b604051808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1681526020019550505050505060405180910390f35b6101c661067a565b61028261073b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102bc5781810151838201526020016102a4565b50505050905090810190601f1680156102e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ff610880565b005b6101c6610936565b610184610989565b610228610998565b6102286004803603602081101561032f57600080fd5b503569ffffffffffffffffffff16610aa0565b6102ff6004803603602081101561035857600080fd5b50356001600160a01b0316610b9d565b6101c66004803603602081101561037e57600080fd5b5035610c76565b6101c66004803603602081101561039b57600080fd5b5035610d56565b610184600480360360208110156103b857600080fd5b503561ffff16610dff565b610184610e1e565b6102ff600480360360208110156103e157600080fd5b50356001600160a01b0316610e2d565b6102ff6004803603602081101561040757600080fd5b50356001600160a01b0316610e41565b610228610ea2565b6004546201000090046001600160a01b031690565b6000600460000160029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561048757600080fd5b505afa15801561049b573d6000803e3d6000fd5b505050506040513d60208110156104b157600080fd5b5051905090565b6000600460000160029054906101000a90046001600160a01b03166001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048757600080fd5b6000600460000160029054906101000a90046001600160a01b03166001600160a01b03166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561048757600080fd5b60045461ffff1690565b60025460009081908190819081906001600160a01b03166105d0576040805162461bcd60e51b815260206004820152601e60248201527f4e6f2070726f706f7365642061676772656761746f722070726573656e740000604482015290519081900360640190fd5b60025460408051639a6fc8f560e01b815269ffffffffffffffffffff8916600482015290516001600160a01b0390921691639a6fc8f59160248082019260a092909190829003018186803b15801561062757600080fd5b505afa15801561063b573d6000803e3d6000fd5b505050506040513d60a081101561065157600080fd5b508051602082015160408301516060840151608090940151929a91995097509195509350915050565b6040805180820182526004805461ffff8116808452620100009091046001600160a01b0316602080850182905285517f668a0f0200000000000000000000000000000000000000000000000000000000815295516000966107299563668a0f0293828201939092909190829003018186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d602081101561072257600080fd5b5051610f9c565b69ffffffffffffffffffff1691505090565b6060600460000160029054906101000a90046001600160a01b03166001600160a01b0316637284e4166040518163ffffffff1660e01b815260040160006040518083038186803b15801561078e57600080fd5b505afa1580156107a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156107cb57600080fd5b81019080805160405193929190846401000000008211156107eb57600080fd5b90830190602082018581111561080057600080fd5b825164010000000081118282018810171561081a57600080fd5b82525081516020918201929091019080838360005b8381101561084757818101518382015260200161082f565b50505050905090810190601f1680156108745780820380516001836020036101000a031916815260200191505b50604052505050905090565b6001546001600160a01b031633146108df576040805162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6000600460000160029054906101000a90046001600160a01b03166001600160a01b0316638205bf6a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048757600080fd5b6000546001600160a01b031690565b60025460009081908190819081906001600160a01b0316610a00576040805162461bcd60e51b815260206004820152601e60248201527f4e6f2070726f706f7365642061676772656761746f722070726573656e740000604482015290519081900360640190fd5b600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a4e57600080fd5b505afa158015610a62573d6000803e3d6000fd5b505050506040513d60a0811015610a7857600080fd5b5080516020820151604083015160608401516080909401519299919850965091945092509050565b6000806000806000806000610ac08869ffffffffffffffffffff16610fbc565b61ffff821660009081526003602052604090819020548151639a6fc8f560e01b815267ffffffffffffffff8416600482015291519395509193506001600160a01b0390911691639a6fc8f59160248082019260a092909190829003018186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d60a0811015610b5657600080fd5b508051602082015160408301516060840151608090940151929a5090985096509094509250610b89878787878787610fc4565b939c929b5090995097509095509350505050565b610ba5610ffa565b6002546001600160a01b03828116911614610c07576040805162461bcd60e51b815260206004820152601b60248201527f496e76616c69642070726f706f7365642061676772656761746f720000000000604482015290519081900360640190fd5b600454600280546001600160a01b03191690556201000090046001600160a01b0316610c328261105b565b816001600160a01b0316816001600160a01b03167f33745f67a407dcb785417f9c123dd3641479a102674b6e35c1f10975625b90e960405160405180910390a35050565b600069ffffffffffffffffffff821115610c9257506000610d51565b600080610c9e84610fbc565b61ffff821660009081526003602052604090205491935091506001600160a01b031680610cd15760009350505050610d51565b806001600160a01b031663b5ab58dc836040518263ffffffff1660e01b8152600401808267ffffffffffffffff16815260200191505060206040518083038186803b158015610d1f57600080fd5b505afa158015610d33573d6000803e3d6000fd5b505050506040513d6020811015610d4957600080fd5b505193505050505b919050565b600069ffffffffffffffffffff821115610d7257506000610d51565b600080610d7e84610fbc565b61ffff821660009081526003602052604090205491935091506001600160a01b031680610db15760009350505050610d51565b806001600160a01b031663b633620c836040518263ffffffff1660e01b8152600401808267ffffffffffffffff16815260200191505060206040518083038186803b158015610d1f57600080fd5b61ffff166000908152600360205260409020546001600160a01b031690565b6002546001600160a01b031690565b610e35610ffa565b610e3e816110e0565b50565b610e49610ffa565b600280546001600160a01b0319166001600160a01b0383811691821790925560045460405191926201000090910416907fc0f151710f03d713b71d9970cee0d5b11ddc9a7552abaa3f6ee818010f21600d90600090a350565b6040805180820182526004805461ffff811683526201000090046001600160a01b03166020830181905283517ffeaf968c000000000000000000000000000000000000000000000000000000008152935160009485948594859485949293909263feaf968c928281019260a0929190829003018186803b158015610f2557600080fd5b505afa158015610f39573d6000803e3d6000fd5b505050506040513d60a0811015610f4f57600080fd5b5080516020820151604083015160608401516080909401518551939a509198509650919450909250610f8a9087908790879087908790610fc4565b95509550955095509550509091929394565b67ffffffffffffffff1660409190911b69ffff0000000000000000161790565b604081901c91565b6000806000806000610fd6868c610f9c565b8a8a8a610fe38a8c610f9c565b939f929e50909c509a509098509650505050505050565b6000546001600160a01b03163314611059576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b565b60048054604080518082018252600161ffff80851691909101168082526001600160a01b0395909516602091820181905261ffff1990931685177fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000084021790935560009384526003909252912080546001600160a01b0319169091179055565b6001600160a01b03811633141561113e576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a35056fea2646970667358221220d8db7d4e7553552ff4112495897c50d33256a94976c197a9134e8a4cb493946364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13C5 CODESIZE SUB DUP1 PUSH2 0x13C5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD CALLER DUP1 PUSH1 0x0 DUP2 PUSH2 0x8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBB JUMPI PUSH2 0xBB DUP2 PUSH2 0xD3 JUMP JUMPDEST POP POP POP PUSH2 0xCD DUP2 PUSH2 0x182 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x131 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH2 0xFFFF DUP1 DUP6 AND SWAP2 SWAP1 SWAP2 ADD AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xFFFF NOT SWAP1 SWAP4 AND DUP6 OR PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 DUP5 MUL OR SWAP1 SWAP4 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x11C5 DUP1 PUSH2 0x200 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x177 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xB633620C GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xF8A2ABD3 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x417 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0xB633620C EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xC1597304 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xE8C4BE30 EQ PUSH2 0x3C3 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x9A6FC8F5 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xA928C096 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x368 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8F6B4D91 EQ PUSH2 0x311 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x6001AC53 GT PUSH2 0x12F JUMPI DUP1 PUSH4 0x7284E416 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x301 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x6001AC53 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x272 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x50D25BCD GT PUSH2 0x160 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x58303B10 EQ PUSH2 0x1E0 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x245A7BFC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x282 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x880 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C6 PUSH2 0x936 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x184 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x228 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726F706F7365642061676772656761746F722070726573656E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x9A6FC8F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x9A6FC8F5 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP11 SWAP2 SWAP10 POP SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF DUP2 AND DUP1 DUP5 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP6 MLOAD PUSH32 0x668A0F0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP6 MLOAD PUSH1 0x0 SWAP7 PUSH2 0x729 SWAP6 PUSH4 0x668A0F02 SWAP4 DUP3 DUP3 ADD SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xF9C JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7284E416 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x847 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x82F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x874 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8205BF6A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726F706F7365642061676772656761746F722070726573656E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP10 SWAP2 SWAP9 POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xAC0 DUP9 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x9A6FC8F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x9A6FC8F5 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP11 POP SWAP1 SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0xB89 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFC4 JUMP JUMPDEST SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0xC07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F706F7365642061676772656761746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC32 DUP3 PUSH2 0x105B JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x33745F67A407DCB785417F9C123DD3641479A102674B6E35C1F10975625B90E9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC92 JUMPI POP PUSH1 0x0 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9E DUP5 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xCD1 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xD51 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB5AB58DC DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD72 JUMPI POP PUSH1 0x0 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7E DUP5 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xDB1 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xD51 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB633620C DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xE35 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0x10E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE49 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH3 0x10000 SWAP1 SWAP2 DIV AND SWAP1 PUSH32 0xC0F151710F03D713B71D9970CEE0D5B11DDC9A7552ABAA3F6EE818010F21600D SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF DUP2 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP4 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH4 0xFEAF968C SWAP3 DUP3 DUP2 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD DUP6 MLOAD SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP2 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0xF8A SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL PUSH10 0xFFFF0000000000000000 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 SWAP1 SHR SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xFD6 DUP7 DUP13 PUSH2 0xF9C JUMP JUMPDEST DUP11 DUP11 DUP11 PUSH2 0xFE3 DUP11 DUP13 PUSH2 0xF9C JUMP JUMPDEST SWAP4 SWAP16 SWAP3 SWAP15 POP SWAP1 SWAP13 POP SWAP11 POP SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1059 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH2 0xFFFF DUP1 DUP6 AND SWAP2 SWAP1 SWAP2 ADD AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xFFFF NOT SWAP1 SWAP4 AND DUP6 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 DUP5 MUL OR SWAP1 SWAP4 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x113E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xDB PUSH30 0x4E7553552FF4112495897C50D33256A94976C197A9134E8A4CB493946364 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "395:13321:2:-:0;;;1031:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1031:109:2;1085:10;;345:1:0;552:22:1;544:59;;;;;-1:-1:-1;;;544:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;610:7;:18;;-1:-1:-1;;;;;;610:18:1;-1:-1:-1;;;;;610:18:1;;;;;;;;;;638:26;;;634:79;;674:32;693:12;674:18;:32::i;:::-;486:231;;270:81:0;1103:32:2::1;1117:17;1103:13;;;:32;;:::i;:::-;1031:109:::0;395:13321;;1497:188:1;-1:-1:-1;;;;;1559:16:1;;1565:10;1559:16;;1551:52;;;;;-1:-1:-1;;;1551:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:14;:19;;-1:-1:-1;;;;;;1610:19:1;-1:-1:-1;;;;;1610:19:1;;;;;;;;;-1:-1:-1;1668:7:1;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:1;1497:188;:::o;12477:254:2:-;12554:14;:17;;12598:54;;;;;;;;12554:17;;;;;:21;;;;12598:54;;;;-1:-1:-1;;;;;12598:54:2;;;;;;;;;;;-1:-1:-1;;12581:71:2;;;;;-1:-1:-1;;;;;;12581:71:2;;;;;;;;-1:-1:-1;12658:22:2;;;:18;:22;;;;;:68;;-1:-1:-1;;;;;;12658:68:2;;;;;;12477:254::o;395:13321::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101775760003560e01c80638da5cb5b116100d8578063b633620c1161008c578063f2fde38b11610066578063f2fde38b146103cb578063f8a2abd3146103f1578063feaf968c1461041757610177565b8063b633620c14610385578063c1597304146103a2578063e8c4be30146103c357610177565b80639a6fc8f5116100bd5780639a6fc8f514610319578063a928c09614610342578063b5ab58dc1461036857610177565b80638da5cb5b146103095780638f6b4d911461031157610177565b80636001ac531161012f5780637284e416116101145780637284e4161461027a57806379ba5097146102f75780638205bf6a1461030157610177565b80636001ac53146101ff578063668a0f021461027257610177565b806350d25bcd1161016057806350d25bcd146101be57806354fd4d50146101d857806358303b10146101e057610177565b8063245a7bfc1461017c578063313ce567146101a0575b600080fd5b61018461041f565b604080516001600160a01b039092168252519081900360200190f35b6101a8610434565b6040805160ff9092168252519081900360200190f35b6101c66104b8565b60408051918252519081900360200190f35b6101c661050b565b6101e861055e565b6040805161ffff9092168252519081900360200190f35b6102286004803603602081101561021557600080fd5b503569ffffffffffffffffffff16610568565b604051808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1681526020019550505050505060405180910390f35b6101c661067a565b61028261073b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102bc5781810151838201526020016102a4565b50505050905090810190601f1680156102e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ff610880565b005b6101c6610936565b610184610989565b610228610998565b6102286004803603602081101561032f57600080fd5b503569ffffffffffffffffffff16610aa0565b6102ff6004803603602081101561035857600080fd5b50356001600160a01b0316610b9d565b6101c66004803603602081101561037e57600080fd5b5035610c76565b6101c66004803603602081101561039b57600080fd5b5035610d56565b610184600480360360208110156103b857600080fd5b503561ffff16610dff565b610184610e1e565b6102ff600480360360208110156103e157600080fd5b50356001600160a01b0316610e2d565b6102ff6004803603602081101561040757600080fd5b50356001600160a01b0316610e41565b610228610ea2565b6004546201000090046001600160a01b031690565b6000600460000160029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561048757600080fd5b505afa15801561049b573d6000803e3d6000fd5b505050506040513d60208110156104b157600080fd5b5051905090565b6000600460000160029054906101000a90046001600160a01b03166001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048757600080fd5b6000600460000160029054906101000a90046001600160a01b03166001600160a01b03166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561048757600080fd5b60045461ffff1690565b60025460009081908190819081906001600160a01b03166105d0576040805162461bcd60e51b815260206004820152601e60248201527f4e6f2070726f706f7365642061676772656761746f722070726573656e740000604482015290519081900360640190fd5b60025460408051639a6fc8f560e01b815269ffffffffffffffffffff8916600482015290516001600160a01b0390921691639a6fc8f59160248082019260a092909190829003018186803b15801561062757600080fd5b505afa15801561063b573d6000803e3d6000fd5b505050506040513d60a081101561065157600080fd5b508051602082015160408301516060840151608090940151929a91995097509195509350915050565b6040805180820182526004805461ffff8116808452620100009091046001600160a01b0316602080850182905285517f668a0f0200000000000000000000000000000000000000000000000000000000815295516000966107299563668a0f0293828201939092909190829003018186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d602081101561072257600080fd5b5051610f9c565b69ffffffffffffffffffff1691505090565b6060600460000160029054906101000a90046001600160a01b03166001600160a01b0316637284e4166040518163ffffffff1660e01b815260040160006040518083038186803b15801561078e57600080fd5b505afa1580156107a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156107cb57600080fd5b81019080805160405193929190846401000000008211156107eb57600080fd5b90830190602082018581111561080057600080fd5b825164010000000081118282018810171561081a57600080fd5b82525081516020918201929091019080838360005b8381101561084757818101518382015260200161082f565b50505050905090810190601f1680156108745780820380516001836020036101000a031916815260200191505b50604052505050905090565b6001546001600160a01b031633146108df576040805162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6000600460000160029054906101000a90046001600160a01b03166001600160a01b0316638205bf6a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048757600080fd5b6000546001600160a01b031690565b60025460009081908190819081906001600160a01b0316610a00576040805162461bcd60e51b815260206004820152601e60248201527f4e6f2070726f706f7365642061676772656761746f722070726573656e740000604482015290519081900360640190fd5b600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a4e57600080fd5b505afa158015610a62573d6000803e3d6000fd5b505050506040513d60a0811015610a7857600080fd5b5080516020820151604083015160608401516080909401519299919850965091945092509050565b6000806000806000806000610ac08869ffffffffffffffffffff16610fbc565b61ffff821660009081526003602052604090819020548151639a6fc8f560e01b815267ffffffffffffffff8416600482015291519395509193506001600160a01b0390911691639a6fc8f59160248082019260a092909190829003018186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d60a0811015610b5657600080fd5b508051602082015160408301516060840151608090940151929a5090985096509094509250610b89878787878787610fc4565b939c929b5090995097509095509350505050565b610ba5610ffa565b6002546001600160a01b03828116911614610c07576040805162461bcd60e51b815260206004820152601b60248201527f496e76616c69642070726f706f7365642061676772656761746f720000000000604482015290519081900360640190fd5b600454600280546001600160a01b03191690556201000090046001600160a01b0316610c328261105b565b816001600160a01b0316816001600160a01b03167f33745f67a407dcb785417f9c123dd3641479a102674b6e35c1f10975625b90e960405160405180910390a35050565b600069ffffffffffffffffffff821115610c9257506000610d51565b600080610c9e84610fbc565b61ffff821660009081526003602052604090205491935091506001600160a01b031680610cd15760009350505050610d51565b806001600160a01b031663b5ab58dc836040518263ffffffff1660e01b8152600401808267ffffffffffffffff16815260200191505060206040518083038186803b158015610d1f57600080fd5b505afa158015610d33573d6000803e3d6000fd5b505050506040513d6020811015610d4957600080fd5b505193505050505b919050565b600069ffffffffffffffffffff821115610d7257506000610d51565b600080610d7e84610fbc565b61ffff821660009081526003602052604090205491935091506001600160a01b031680610db15760009350505050610d51565b806001600160a01b031663b633620c836040518263ffffffff1660e01b8152600401808267ffffffffffffffff16815260200191505060206040518083038186803b158015610d1f57600080fd5b61ffff166000908152600360205260409020546001600160a01b031690565b6002546001600160a01b031690565b610e35610ffa565b610e3e816110e0565b50565b610e49610ffa565b600280546001600160a01b0319166001600160a01b0383811691821790925560045460405191926201000090910416907fc0f151710f03d713b71d9970cee0d5b11ddc9a7552abaa3f6ee818010f21600d90600090a350565b6040805180820182526004805461ffff811683526201000090046001600160a01b03166020830181905283517ffeaf968c000000000000000000000000000000000000000000000000000000008152935160009485948594859485949293909263feaf968c928281019260a0929190829003018186803b158015610f2557600080fd5b505afa158015610f39573d6000803e3d6000fd5b505050506040513d60a0811015610f4f57600080fd5b5080516020820151604083015160608401516080909401518551939a509198509650919450909250610f8a9087908790879087908790610fc4565b95509550955095509550509091929394565b67ffffffffffffffff1660409190911b69ffff0000000000000000161790565b604081901c91565b6000806000806000610fd6868c610f9c565b8a8a8a610fe38a8c610f9c565b939f929e50909c509a509098509650505050505050565b6000546001600160a01b03163314611059576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b565b60048054604080518082018252600161ffff80851691909101168082526001600160a01b0395909516602091820181905261ffff1990931685177fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000084021790935560009384526003909252912080546001600160a01b0319169091179055565b6001600160a01b03811633141561113e576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a35056fea2646970667358221220d8db7d4e7553552ff4112495897c50d33256a94976c197a9134e8a4cb493946364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x177 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xB633620C GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xF8A2ABD3 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x417 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0xB633620C EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xC1597304 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xE8C4BE30 EQ PUSH2 0x3C3 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x9A6FC8F5 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xA928C096 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x368 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8F6B4D91 EQ PUSH2 0x311 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x6001AC53 GT PUSH2 0x12F JUMPI DUP1 PUSH4 0x7284E416 GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x301 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x6001AC53 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x272 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x50D25BCD GT PUSH2 0x160 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x58303B10 EQ PUSH2 0x1E0 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x245A7BFC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x282 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x880 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C6 PUSH2 0x936 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x989 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x998 JUMP JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x184 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x228 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726F706F7365642061676772656761746F722070726573656E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x9A6FC8F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x9A6FC8F5 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP11 SWAP2 SWAP10 POP SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF DUP2 AND DUP1 DUP5 MSTORE PUSH3 0x10000 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP6 MLOAD PUSH32 0x668A0F0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP6 MLOAD PUSH1 0x0 SWAP7 PUSH2 0x729 SWAP6 PUSH4 0x668A0F02 SWAP4 DUP3 DUP3 ADD SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xF9C JUMP JUMPDEST PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7284E416 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x847 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x82F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x874 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8205BF6A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726F706F7365642061676772656761746F722070726573656E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP10 SWAP2 SWAP9 POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xAC0 DUP9 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x9A6FC8F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x9A6FC8F5 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP11 POP SWAP1 SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP PUSH2 0xB89 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFC4 JUMP JUMPDEST SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0xC07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F706F7365642061676772656761746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC32 DUP3 PUSH2 0x105B JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x33745F67A407DCB785417F9C123DD3641479A102674B6E35C1F10975625B90E9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC92 JUMPI POP PUSH1 0x0 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9E DUP5 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xCD1 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xD51 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB5AB58DC DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD72 JUMPI POP PUSH1 0x0 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7E DUP5 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xDB1 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xD51 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB633620C DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xE35 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0x10E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE49 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 PUSH3 0x10000 SWAP1 SWAP2 DIV AND SWAP1 PUSH32 0xC0F151710F03D713B71D9970CEE0D5B11DDC9A7552ABAA3F6EE818010F21600D SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF DUP2 AND DUP4 MSTORE PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP4 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 SWAP5 DUP6 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH4 0xFEAF968C SWAP3 DUP3 DUP2 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD DUP6 MLOAD SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP2 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0xF8A SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL PUSH10 0xFFFF0000000000000000 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 SWAP1 SHR SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xFD6 DUP7 DUP13 PUSH2 0xF9C JUMP JUMPDEST DUP11 DUP11 DUP11 PUSH2 0xFE3 DUP11 DUP13 PUSH2 0xF9C JUMP JUMPDEST SWAP4 SWAP16 SWAP3 SWAP15 POP SWAP1 SWAP13 POP SWAP11 POP SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1059 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH2 0xFFFF DUP1 DUP6 AND SWAP2 SWAP1 SWAP2 ADD AND DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xFFFF NOT SWAP1 SWAP4 AND DUP6 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 DUP5 MUL OR SWAP1 SWAP4 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x113E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xDB PUSH30 0x4E7553552FF4112495897C50D33256A94976C197A9134E8A4CB493946364 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "395:13321:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10040:115;;;:::i;:::-;;;;-1:-1:-1;;;;;10040:115:2;;;;;;;;;;;;;;10409:113;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1523:135;;;:::i;:::-;;;;;;;;;;;;;;;;10632:113;;;:::i;10216:94::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8814:308;;;;;;;;;;;;;;;;-1:-1:-1;8814:308:2;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4333:218;;;:::i;10837:127::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:265:1;;;:::i;:::-;;2046:145:2;;;:::i;1332:81:1:-;;;:::i;9670:293:2:-;;;:::i;5982:500::-;;;;;;;;;;;;;;;;-1:-1:-1;5982:500:2;;;;:::i;12064:383::-;;;;;;;;;;;;;;;;-1:-1:-1;12064:383:2;-1:-1:-1;;;;;12064:383:2;;:::i;2602:376::-;;;;;;;;;;;;;;;;-1:-1:-1;2602:376:2;;:::i;3428:386::-;;;;;;;;;;;;;;;;-1:-1:-1;3428:386:2;;:::i;11256:137::-;;;;;;;;;;;;;;;;-1:-1:-1;11256:137:2;;;;:::i;11033:118::-;;;:::i;826:98:1:-;;;;;;;;;;;;;;;;-1:-1:-1;826:98:1;-1:-1:-1;;;;;826:98:1;;:::i;11557:234:2:-;;;;;;;;;;;;;;;;-1:-1:-1;11557:234:2;-1:-1:-1;;;;;11557:234:2;;:::i;7735:467::-;;;:::i;10040:115::-;10124:14;:25;;;;-1:-1:-1;;;;;10124:25:2;;10040:115::o;10409:113::-;10461:5;10481:14;:25;;;;;;;;;;-1:-1:-1;;;;;10481:25:2;-1:-1:-1;;;;;10481:34:2;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10481:36:2;;-1:-1:-1;10409:113:2;:::o;1523:135::-;1585:13;1613:14;:25;;;;;;;;;;-1:-1:-1;;;;;1613:25:2;-1:-1:-1;;;;;1613:38:2;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10632:113;10683:7;10705:14;:25;;;;;;;;;;-1:-1:-1;;;;;10705:25:2;-1:-1:-1;;;;;10705:33:2;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10216:94;10288:14;:17;;;10216:94;:::o;8814:308::-;13632:20;;8943:9;;;;;;;;;;-1:-1:-1;;;;;13632:20:2;13616:86;;;;;-1:-1:-1;;;13616:86:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;9075:20:::1;::::0;:42:::1;::::0;;-1:-1:-1;;;9075:42:2;;::::1;::::0;::::1;;::::0;::::1;::::0;;;-1:-1:-1;;;;;9075:20:2;;::::1;::::0;:33:::1;::::0;:42;;;;;::::1;::::0;;;;;;;;;:20;:42;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9075:42:2;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;-1:-1:-1;9075:42:2;-1:-1:-1;9075:42:2;;-1:-1:-1;9075:42:2;-1:-1:-1;8814:308:2;-1:-1:-1;;8814:308:2:o;4333:218::-;4417:35;;;;;;;;4438:14;4417:35;;;;;;;;;;;;-1:-1:-1;;;;;4417:35:2;;;;;;;;4514:30;;;;;;;-1:-1:-1;;4488:58:2;;4514:28;;:30;;;;4417:35;;4514:30;;;;;;;;4417:35;4514:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4514:30:2;4488:8;:58::i;:::-;4481:65;;;;;4333:218;:::o;10837:127::-;10892:13;10920:14;:25;;;;;;;;;;-1:-1:-1;;;;;10920:25:2;-1:-1:-1;;;;;10920:37:2;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10920:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10920:39:2;;;;;;;;;;-1:-1:-1;10920:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10913:46;;10837:127;:::o;1016:265:1:-;1089:14;;-1:-1:-1;;;;;1089:14:1;1075:10;:28;1067:63;;;;;-1:-1:-1;;;1067:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:16;1156:7;;1179:10;-1:-1:-1;;;;;;1169:20:1;;;;;;;-1:-1:-1;1195:27:1;;;;;;;1234:42;;-1:-1:-1;;;;;1156:7:1;;;;1179:10;;1156:7;;1234:42;;;1016:265;:::o;2046:145:2:-;2111:17;2143:14;:25;;;;;;;;;;-1:-1:-1;;;;;2143:25:2;-1:-1:-1;;;;;2143:41:2;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332:81:1;1379:7;1401;-1:-1:-1;;;;;1401:7:1;1332:81;:::o;9670:293:2:-;13632:20;;9788:9;;;;;;;;;;-1:-1:-1;;;;;13632:20:2;13616:86;;;;;-1:-1:-1;;;13616:86:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;9920:20:::1;;;;;;;;;-1:-1:-1::0;;;;;9920:20:2::1;-1:-1:-1::0;;;;;9920:36:2::1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9920:38:2;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;-1:-1:-1;9920:38:2;-1:-1:-1;9920:38:2;;-1:-1:-1;9920:38:2;-1:-1:-1;9670:293:2;-1:-1:-1;9670:293:2:o;5982:500::-;6085:9;6102:13;6123:17;6148;6173:22;6211:14;6227:24;6255:17;6264:7;6255:17;;:8;:17::i;:::-;6333:27;;;;;;;:18;:27;;;;;;;;:59;;-1:-1:-1;;;6333:59:2;;;;;;;;;;;6210:62;;-1:-1:-1;6210:62:2;;-1:-1:-1;;;;;;6333:27:2;;;;:40;;:59;;;;;;;;;;;;;;;:27;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6333:59:2;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6333:59:2;;-1:-1:-1;6333:59:2;-1:-1:-1;6333:59:2;;-1:-1:-1;6333:59:2;-1:-1:-1;6406:71:2;6333:59;;;;;6469:7;6406:11;:71::i;:::-;6399:78;;;;-1:-1:-1;6399:78:2;;-1:-1:-1;6399:78:2;-1:-1:-1;6399:78:2;;-1:-1:-1;5982:500:2;-1:-1:-1;;;;5982:500:2:o;12064:383::-;1956:20:1;:18;:20::i;:::-;12180::2::1;::::0;-1:-1:-1;;;;;12151:50:2;;::::1;12180:20:::0;::::1;12151:50;12143:90;;;::::0;;-1:-1:-1;;;12143:90:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;12276:14;:25:::0;::::1;12308:27:::0;;-1:-1:-1;;;;;;12308:27:2::1;::::0;;12276:25;;::::1;-1:-1:-1::0;;;;;12276:25:2::1;12341:32;12355:17:::0;12341:13:::1;:32::i;:::-;12424:17;-1:-1:-1::0;;;;;12384:58:2::1;12404:18;-1:-1:-1::0;;;;;12384:58:2::1;;;;;;;;;;;1982:1:1;12064:383:2::0;:::o;2602:376::-;2676:13;833:34;2701:16;;2697:30;;;-1:-1:-1;2726:1:2;2719:8;;2697:30;2735:14;2751:24;2779:17;2788:7;2779:8;:17::i;:::-;2840:27;;;2802:35;2840:27;;;:18;:27;;;;;;2734:62;;-1:-1:-1;2734:62:2;-1:-1:-1;;;;;;2840:27:2;2877:33;2873:47;;2919:1;2912:8;;;;;;;2873:47;2934:10;-1:-1:-1;;;;;2934:20:2;;2955:17;2934:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2934:39:2;;-1:-1:-1;;;;2602:376:2;;;;:::o;3428:386::-;3505:17;833:34;3534:16;;3530:30;;;-1:-1:-1;3559:1:2;3552:8;;3530:30;3568:14;3584:24;3612:17;3621:7;3612:8;:17::i;:::-;3673:27;;;3635:35;3673:27;;;:18;:27;;;;;;3567:62;;-1:-1:-1;3567:62:2;-1:-1:-1;;;;;;3673:27:2;3710:33;3706:47;;3752:1;3745:8;;;;;;;3706:47;3767:10;-1:-1:-1;;;;;3767:23:2;;3791:17;3767:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11256:137;11360:27;;11330:7;11360:27;;;:18;:27;;;;;;-1:-1:-1;;;;;11360:27:2;;11256:137::o;11033:118::-;11125:20;;-1:-1:-1;;;;;11125:20:2;11033:118;:::o;826:98:1:-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;:::-;826:98:::0;:::o;11557:234:2:-;1956:20:1;:18;:20::i;:::-;11636::2::1;:66:::0;;-1:-1:-1;;;;;;11636:66:2::1;-1:-1:-1::0;;;;;11636:66:2;;::::1;::::0;;::::1;::::0;;;11740:14:::1;:25:::0;11713:73:::1;::::0;11636:66;;11740:25;;;::::1;;::::0;11713:73:::1;::::0;-1:-1:-1;;11713:73:2::1;11557:234:::0;:::o;7735:467::-;7952:37;;;;;;;;7975:14;7952:37;;;;;;;;;;-1:-1:-1;;;;;7952:37:2;;;;;;;8073:36;;;;;;;-1:-1:-1;;;;;;;;;;7952:37:2;;;;8073:34;;:36;;;;;;;;;;;;;7952:37;8073:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8073:36:2;;;;;;;;;;;;;;;;;;;8186:10;;8073:36;;-1:-1:-1;8073:36:2;;-1:-1:-1;8073:36:2;-1:-1:-1;8073:36:2;;-1:-1:-1;8073:36:2;;-1:-1:-1;8123:74:2;;8073:36;;;;;;;;;;8123:11;:74::i;:::-;8116:81;;;;;;;;;;;7735:467;;;;;:::o;12735:153::-;12837:45;;749:2;12838:30;;;;;;12837:45;;12735:153::o;12892:223::-;749:2;12996:23;;;12892:223;:::o;13119:437::-;13319:6;13333;13347:7;13362;13377:6;13413:34;13422:7;13438;13413:8;:34::i;:::-;13455:6;13469:9;13486;13503:42;13512:7;13528:15;13503:8;:42::i;:::-;13398:153;;;;-1:-1:-1;13398:153:2;;-1:-1:-1;13398:153:2;-1:-1:-1;13398:153:2;;-1:-1:-1;13119:437:2;-1:-1:-1;;;;;;;13119:437:2:o;1730:111:1:-;1802:7;;-1:-1:-1;;;;;1802:7:1;1788:10;:21;1780:56;;;;;-1:-1:-1;;;1780:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1730:111::o;12477:254:2:-;12554:14;:17;;12598:54;;;;;;;;12554:17;;;;;:21;;;;12598:54;;;;-1:-1:-1;;;;;12598:54:2;;;;;;;;;;;-1:-1:-1;;12581:71:2;;;;;;;;;;;;;;-1:-1:-1;12658:22:2;;;:18;:22;;;;;:68;;-1:-1:-1;;;;;;12658:68:2;;;;;;12477:254::o;1497:188:1:-;-1:-1:-1;;;;;1559:16:1;;1565:10;1559:16;;1551:52;;;;;-1:-1:-1;;;1551:52:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:14;:19;;-1:-1:-1;;;;;;1610:19:1;-1:-1:-1;;;;;1610:19:1;;;;;;;;;-1:-1:-1;1668:7:1;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:1;1497:188;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "909800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "44266",
								"aggregator()": "1095",
								"confirmAggregator(address)": "67125",
								"decimals()": "infinite",
								"description()": "infinite",
								"getAnswer(uint256)": "infinite",
								"getRoundData(uint80)": "infinite",
								"getTimestamp(uint256)": "infinite",
								"latestAnswer()": "infinite",
								"latestRound()": "infinite",
								"latestRoundData()": "infinite",
								"latestTimestamp()": "infinite",
								"owner()": "1083",
								"phaseAggregators(uint16)": "1224",
								"phaseId()": "1103",
								"proposeAggregator(address)": "24349",
								"proposedAggregator()": "1126",
								"proposedGetRoundData(uint80)": "infinite",
								"proposedLatestRoundData()": "infinite",
								"transferOwnership(address)": "24385",
								"version()": "infinite"
							},
							"internal": {
								"addPhase(uint16,uint64)": "42",
								"addPhaseIds(uint80,int256,uint256,uint256,uint80,uint16)": "infinite",
								"parseIds(uint256)": "24",
								"setAggregator(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 395,
									"end": 13716,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1085,
									"end": 1095,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1085,
									"end": 1095,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 345,
									"end": 346,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 574,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 544,
									"end": 603,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 544,
									"end": 603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 610,
									"end": 617,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 610,
									"end": 628,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 664,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 634,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 634,
									"end": 713,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 674,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 693,
									"end": 705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 674,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 674,
									"end": 706,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 486,
									"end": 717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 270,
									"end": 351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1117,
									"end": 1134,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1103,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1103,
									"end": 1116,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1103,
									"end": 1116,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1103,
									"end": 1135,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1031,
									"end": 1140,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1565,
									"end": 1575,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1559,
									"end": 1575,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1551,
									"end": 1603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1624,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1629,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "PUSH",
									"source": 1,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1641,
									"end": 1680,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1685,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 12477,
									"end": 12731,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 12477,
									"end": 12731,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12568,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 12554,
									"end": 12571,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12571,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12571,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 12554,
									"end": 12571,
									"name": "PUSH",
									"source": 2,
									"value": "FFFF"
								},
								{
									"begin": 12554,
									"end": 12571,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12571,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12571,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12575,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12575,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 12554,
									"end": 12575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 12598,
									"end": 12652,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "OR",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "PUSH",
									"source": 2,
									"value": "10000"
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 12581,
									"end": 12652,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 12658,
									"end": 12680,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12680,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12680,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12676,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 12658,
									"end": 12680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12680,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12680,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12680,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12726,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12726,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12658,
									"end": 12726,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12726,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12726,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12726,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12726,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 12658,
									"end": 12726,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 12477,
									"end": 12731,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 395,
									"end": 13716,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d8db7d4e7553552ff4112495897c50d33256a94976c197a9134e8a4cb493946364736f6c63430007060033",
									".code": [
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "B633620C"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "F8A2ABD3"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "B633620C"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "C1597304"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "E8C4BE30"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "9A6FC8F5"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "9A6FC8F5"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "A928C096"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "B5AB58DC"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "8F6B4D91"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "6001AC53"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "7284E416"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "7284E416"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "79BA5097"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "8205BF6A"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "6001AC53"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "668A0F02"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "50D25BCD"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "50D25BCD"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "54FD4D50"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "58303B10"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "245A7BFC"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 395,
											"end": 13716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10745,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 10632,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10632,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 10632,
											"end": 10745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2191,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2046,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2046,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2046,
											"end": 2191,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10138,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10124,
											"end": 10149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10149,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 10124,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10149,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10124,
											"end": 10149,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10124,
											"end": 10149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10040,
											"end": 10155,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10461,
											"end": 10466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10481,
											"end": 10506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10481,
											"end": 10515,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10515,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10481,
											"end": 10517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10409,
											"end": 10522,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1523,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1613,
											"end": 1638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1613,
											"end": 1651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "50D25BCD"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1653,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10745,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 10632,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10719,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10730,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10738,
											"name": "PUSH",
											"source": 2,
											"value": "54FD4D50"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10740,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10302,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10288,
											"end": 10305,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10305,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 10288,
											"end": 10305,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10216,
											"end": 10310,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13632,
											"end": 13652,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 13632,
											"end": 13652,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13632,
											"end": 13652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F2070726F706F7365642061676772656761746F722070726573656E740000"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A6FC8F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9108,
											"name": "PUSH",
											"source": 2,
											"value": "9A6FC8F5"
										},
										{
											"begin": 9075,
											"end": 9108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9075,
											"end": 9117,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8814,
											"end": 9122,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4438,
											"end": 4452,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH",
											"source": 2,
											"value": "668A0F0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 4488,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4488,
											"end": 4546,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4542,
											"name": "PUSH",
											"source": 2,
											"value": "668A0F02"
										},
										{
											"begin": 4514,
											"end": 4542,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4452,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4488,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4488,
											"end": 4546,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4488,
											"end": 4546,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4488,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4481,
											"end": 4546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4333,
											"end": 4551,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10892,
											"end": 10905,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10920,
											"end": 10934,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10920,
											"end": 10945,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10920,
											"end": 10957,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10957,
											"name": "PUSH",
											"source": 2,
											"value": "7284E416"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10920,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10913,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10913,
											"end": 10959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10964,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1089,
											"end": 1103,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1103,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "4D7573742062652070726F706F736564206F776E657200000000000000000000"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1067,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1189,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1222,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1276,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2046,
											"end": 2191,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2046,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2143,
											"end": 2168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2143,
											"end": 2184,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2184,
											"name": "PUSH",
											"source": 2,
											"value": "8205BF6A"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2186,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1413,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13632,
											"end": 13652,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 13632,
											"end": 13652,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13632,
											"end": 13652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F2070726F706F7365642061676772656761746F722070726573656E740000"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 13616,
											"end": 13702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 9956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9956,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 9958,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9670,
											"end": 9963,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6085,
											"end": 6094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6115,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6123,
											"end": 6140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6173,
											"end": 6195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6225,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6227,
											"end": 6251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6264,
											"end": 6271,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6255,
											"end": 6272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6255,
											"end": 6272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6255,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6255,
											"end": 6272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6255,
											"end": 6272,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6255,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A6FC8F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6272,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6272,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6210,
											"end": 6272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6272,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6373,
											"name": "PUSH",
											"source": 2,
											"value": "9A6FC8F5"
										},
										{
											"begin": 6333,
											"end": 6373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6360,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6392,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6469,
											"end": 6476,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6406,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP13",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP12",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6477,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5982,
											"end": 6482,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12200,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12180,
											"end": 12200,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12151,
											"end": 12201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12151,
											"end": 12201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12151,
											"end": 12201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12180,
											"end": 12200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12180,
											"end": 12200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12151,
											"end": 12201,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "496E76616C69642070726F706F7365642061676772656761746F720000000000"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 12143,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12276,
											"end": 12290,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12276,
											"end": 12301,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12276,
											"end": 12301,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12308,
											"end": 12335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12308,
											"end": 12335,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12308,
											"end": 12335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12308,
											"end": 12335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12308,
											"end": 12335,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12276,
											"end": 12301,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 12276,
											"end": 12301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12276,
											"end": 12301,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12276,
											"end": 12301,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12341,
											"end": 12373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 12355,
											"end": 12372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12341,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 12341,
											"end": 12373,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12341,
											"end": 12373,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 12341,
											"end": 12373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12424,
											"end": 12441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12404,
											"end": 12422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "PUSH",
											"source": 2,
											"value": "33745F67A407DCB785417F9C123DD3641479A102674B6E35C1F10975625B90E9"
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12442,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12064,
											"end": 12447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2717,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2727,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2697,
											"end": 2727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2719,
											"end": 2727,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2727,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2697,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2779,
											"end": 2796,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2779,
											"end": 2796,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2779,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2858,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2796,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2734,
											"end": 2796,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2840,
											"end": 2867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2934,
											"end": 2954,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2954,
											"name": "PUSH",
											"source": 2,
											"value": "B5AB58DC"
										},
										{
											"begin": 2955,
											"end": 2972,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2973,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2978,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3428,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3505,
											"end": 3522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3534,
											"end": 3550,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3550,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3552,
											"end": 3560,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3621,
											"end": 3628,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3612,
											"end": 3629,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3612,
											"end": 3629,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3612,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3629,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3567,
											"end": 3629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3673,
											"end": 3700,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3706,
											"end": 3753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3753,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3745,
											"end": 3753,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3706,
											"end": 3753,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3706,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "PUSH",
											"source": 2,
											"value": "B633620C"
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3809,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11330,
											"end": 11337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11360,
											"end": 11387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11393,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11145,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11125,
											"end": 11145,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11125,
											"end": 11145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11033,
											"end": 11151,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 916,
											"end": 918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 897,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1956,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11636,
											"end": 11656,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11754,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11740,
											"end": 11765,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11713,
											"end": 11786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11636,
											"end": 11702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11765,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 11740,
											"end": 11765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11765,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11765,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11786,
											"name": "PUSH",
											"source": 2,
											"value": "C0F151710F03D713B71D9970CEE0D5B11DDC9A7552ABAA3F6EE818010F21600D"
										},
										{
											"begin": 11713,
											"end": 11786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11713,
											"end": 11786,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11791,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7975,
											"end": 7989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 8073,
											"end": 8107,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7952,
											"end": 7989,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8186,
											"end": 8196,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8186,
											"end": 8196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8123,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 8123,
											"end": 8197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 8123,
											"end": 8197,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8123,
											"end": 8197,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 8123,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7735,
											"end": 8202,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12735,
											"end": 12888,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 12735,
											"end": 12888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12837,
											"end": 12882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12837,
											"end": 12882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12838,
											"end": 12868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12838,
											"end": 12868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12838,
											"end": 12868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12838,
											"end": 12868,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 12838,
											"end": 12868,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF0000000000000000"
										},
										{
											"begin": 12838,
											"end": 12868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12837,
											"end": 12882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12837,
											"end": 12882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12735,
											"end": 12888,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12892,
											"end": 13115,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 12892,
											"end": 13115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12996,
											"end": 13019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12996,
											"end": 13019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12996,
											"end": 13019,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 12892,
											"end": 13115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12892,
											"end": 13115,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13119,
											"end": 13556,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 13119,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13319,
											"end": 13325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13333,
											"end": 13339,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13347,
											"end": 13354,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13362,
											"end": 13369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13377,
											"end": 13383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13413,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13422,
											"end": 13429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13438,
											"end": 13445,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 13413,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 13413,
											"end": 13447,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13413,
											"end": 13447,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13413,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13455,
											"end": 13461,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 13469,
											"end": 13478,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 13486,
											"end": 13495,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13512,
											"end": 13519,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 13528,
											"end": 13543,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 13503,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 13503,
											"end": 13545,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13503,
											"end": 13545,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 13503,
											"end": 13545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP16",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP15",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP13",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13398,
											"end": 13551,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13119,
											"end": 13556,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13119,
											"end": 13556,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1780,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1841,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12477,
											"end": 12731,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 12477,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12568,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12571,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12598,
											"end": 12652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF"
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12581,
											"end": 12652,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12676,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12726,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12658,
											"end": 12726,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12726,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12726,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12658,
											"end": 12726,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12477,
											"end": 12731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1575,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1551,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1624,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "PUSH",
											"source": 1,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1680,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"aggregator()": "245a7bfc",
							"confirmAggregator(address)": "a928c096",
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getAnswer(uint256)": "b5ab58dc",
							"getRoundData(uint80)": "9a6fc8f5",
							"getTimestamp(uint256)": "b633620c",
							"latestAnswer()": "50d25bcd",
							"latestRound()": "668a0f02",
							"latestRoundData()": "feaf968c",
							"latestTimestamp()": "8205bf6a",
							"owner()": "8da5cb5b",
							"phaseAggregators(uint16)": "c1597304",
							"phaseId()": "58303b10",
							"proposeAggregator(address)": "f8a2abd3",
							"proposedAggregator()": "e8c4be30",
							"proposedGetRoundData(uint80)": "6001ac53",
							"proposedLatestRoundData()": "8f6b4d91",
							"transferOwnership(address)": "f2fde38b",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregatorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"latest\",\"type\":\"address\"}],\"name\":\"AggregatorConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposed\",\"type\":\"address\"}],\"name\":\"AggregatorProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregatorAddress\",\"type\":\"address\"}],\"name\":\"confirmAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"id\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"id\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"phaseId\",\"type\":\"uint16\"}],\"name\":\"phaseAggregators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phaseId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregatorAddress\",\"type\":\"address\"}],\"name\":\"proposeAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedAggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"id\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedLatestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"id\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"confirmAggregator(address)\":{\"details\":\"Reverts if the given address doesn't match what was previously proposed\",\"params\":{\"aggregatorAddress\":\"The new address for the aggregator contract\"}},\"getAnswer(uint256)\":{\"details\":\"#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.\",\"params\":{\"roundId\":\"the answer number to retrieve the answer for\"}},\"getRoundData(uint80)\":{\"details\":\"Note that answer and updatedAt may change between queries.\",\"params\":{\"roundId\":\"the requested round ID as presented through the proxy, this is made up of the aggregator's round ID with the phase ID encoded in the two highest order bytes\"},\"returns\":{\"answer\":\"is the answer for the given round\",\"answeredInRound\":\"is the round ID of the round in which the answer was computed. (Only some AggregatorV3Interface implementations return meaningful values)\",\"id\":\"is the round ID from the aggregator for which the data was retrieved combined with an phase to ensure that round IDs get larger as time moves forward.\",\"startedAt\":\"is the timestamp when the round was started. (Only some AggregatorV3Interface implementations return meaningful values)\",\"updatedAt\":\"is the timestamp when the round last was updated (i.e. answer was last computed)\"}},\"getTimestamp(uint256)\":{\"details\":\"#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.\",\"params\":{\"roundId\":\"the answer number to retrieve the updated timestamp for\"}},\"latestAnswer()\":{\"details\":\"#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"latestRound()\":{\"details\":\"#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"latestRoundData()\":{\"details\":\"Note that answer and updatedAt may change between queries.\",\"returns\":{\"answer\":\"is the answer for the given round\",\"answeredInRound\":\"is the round ID of the round in which the answer was computed. (Only some AggregatorV3Interface implementations return meaningful values)\",\"id\":\"is the round ID from the aggregator for which the data was retrieved combined with an phase to ensure that round IDs get larger as time moves forward.\",\"startedAt\":\"is the timestamp when the round was started. (Only some AggregatorV3Interface implementations return meaningful values)\",\"updatedAt\":\"is the timestamp when the round last was updated (i.e. answer was last computed)\"}},\"latestTimestamp()\":{\"details\":\"#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"phaseAggregators(uint16)\":{\"params\":{\"phaseId\":\"uint16\"}},\"proposeAggregator(address)\":{\"params\":{\"aggregatorAddress\":\"The new address for the aggregator contract\"}},\"proposedGetRoundData(uint80)\":{\"params\":{\"roundId\":\"the round ID to retrieve the round data for\"},\"returns\":{\"answer\":\"is the answer for the given round\",\"answeredInRound\":\"is the round ID of the round in which the answer was computed.\",\"id\":\"is the round ID for which data was retrieved\",\"startedAt\":\"is the timestamp when the round was started. (Only some AggregatorV3Interface implementations return meaningful values)\",\"updatedAt\":\"is the timestamp when the round last was updated (i.e. answer was last computed)\"}},\"proposedLatestRoundData()\":{\"returns\":{\"answer\":\"is the answer for the given round\",\"answeredInRound\":\"is the round ID of the round in which the answer was computed.\",\"id\":\"is the round ID for which data was retrieved\",\"startedAt\":\"is the timestamp when the round was started. (Only some AggregatorV3Interface implementations return meaningful values)\",\"updatedAt\":\"is the timestamp when the round last was updated (i.e. answer was last computed)\"}}},\"title\":\"A trusted proxy for updating where current answers are read from\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"aggregator()\":{\"notice\":\"returns the current phase's aggregator address.\"},\"confirmAggregator(address)\":{\"notice\":\"Allows the owner to confirm and change the address to the proposed aggregator\"},\"decimals()\":{\"notice\":\"represents the number of decimals the aggregator responses represent.\"},\"description()\":{\"notice\":\"returns the description of the aggregator the proxy points to.\"},\"getAnswer(uint256)\":{\"notice\":\"get past rounds answers\"},\"getRoundData(uint80)\":{\"notice\":\"get data about a round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values. Note that different underlying implementations of AggregatorV3Interface have slightly different semantics for some of the return values. Consumers should determine what implementations they expect to receive data from and validate that they can properly handle return data from all of them.\"},\"getTimestamp(uint256)\":{\"notice\":\"get block timestamp when an answer was last updated\"},\"latestAnswer()\":{\"notice\":\"Reads the current answer from aggregator delegated to.\"},\"latestRound()\":{\"notice\":\"get the latest completed round where the answer was updated. This ID includes the proxy's phase, to make sure round IDs increase even when switching to a newly deployed aggregator.\"},\"latestRoundData()\":{\"notice\":\"get data about the latest round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values. Note that different underlying implementations of AggregatorV3Interface have slightly different semantics for some of the return values. Consumers should determine what implementations they expect to receive data from and validate that they can properly handle return data from all of them.\"},\"latestTimestamp()\":{\"notice\":\"Reads the last updated height from aggregator delegated to.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"phaseAggregators(uint16)\":{\"notice\":\"return a phase aggregator using the phaseId\"},\"phaseId()\":{\"notice\":\"returns the current phase's ID.\"},\"proposeAggregator(address)\":{\"notice\":\"Allows the owner to propose a new address for the aggregator\"},\"proposedAggregator()\":{\"notice\":\"returns the current proposed aggregator\"},\"proposedGetRoundData(uint80)\":{\"notice\":\"Used if an aggregator contract has been proposed.\"},\"proposedLatestRoundData()\":{\"notice\":\"Used if an aggregator contract has been proposed.\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"version()\":{\"notice\":\"the version number representing the type of aggregator the proxy points to.\"}},\"notice\":\"This contract provides a consistent address for the CurrentAnswerInterface but delegates where it reads from to the owner, who is trusted to update it.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":\"AggregatorProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol\":{\"keccak256\":\"0xba5a8452dcb14e3fecb9f39e415db6cd8b45cbe0a03899febe4f5e715396a9cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321c4997e9d7248386b6946ce113ba586ab8f2bf57bb793c07abf0a5e9f80b76\",\"dweb:/ipfs/QmPMUYFm5iUQcEehh1woqH4jNWy2sEPU1fPSVUc76NJrRR\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0xd9c444260e0ed47bfcf49f269fa52af499e6707b741ae49c7d79e49168c9e4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36aee63c481b52c4420d08135eef232102cf6d68435a3b00b21c87d1f1e2b050\",\"dweb:/ipfs/QmcAXNtqSJvVmsRdgbYfxqDtUZXp8UKK4kJg8C3cVf9FUo\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol\":{\"keccak256\":\"0x5c06d7cd6bb91216be94ac92ab8ace4d64bc8f64ecf42b30f46dc367c7061f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cb17201808cb8e3f8d049d626d2bde42e2951c0e976ba3db662f204e576d893\",\"dweb:/ipfs/QmP61SYauLY696BDKVb17RCaHQe1nb6NQtPJa3XqUQvpAD\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x682963fa630d6afc8e1fcc5b3ee6b49ec1216f30ac698bca43747bd6e8a19fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d79e1f45993bd99c580bed23f1128d3b5e85c66a1399604c09066f4b26cdd8d8\",\"dweb:/ipfs/QmY1uVYYPspoMHMHLB6RiWaBD2WJqorYf3HGpMB4FqL9Vo\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol\":{\"keccak256\":\"0x835015c904e6b9b5c5ddf96f74b39a36c787dc7fa5ccd776ca0f02d0ce5cca90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dab9393973a5527bda1d96caf47518a71986824c30673ccf50b32034a1737542\",\"dweb:/ipfs/QmQ1zS4VHNQEWZbYFBakPBfaVizLU1yoJvfV8DdPxb96iV\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xc0c5994fc656e4393d2ca4e5128f658de92637346bbd943041c50d9ffbc8aa8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51b0829a4710485a63baac80f07cead98e82dd2da5ef94ef92940fde31e2c827\",\"dweb:/ipfs/QmPVQKfyq7GT8UjmztfNfsTfnkEJpxZZhLUWqaimkhgJoQ\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5cf082133e64f5f90f446c011681ea7ab719e2992c7247074b943771c176494a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7072938999863308ca3177b3ad71451e3639b16fbcfd3873bde1efd80386e1\",\"dweb:/ipfs/QmU3q5sCtSK7VM6tcvLfyUws1Z1WeYWeqCqBoecJwfAt5G\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0x5b0ba0302a06c80ff88368c02dab44a0d9b735a599ba6ff905284044f02f2932\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0163141ba0751e2f2cfd064e7bc4df7b0d586dafd4df2bff86a10d12f0c85ea2\",\"dweb:/ipfs/QmUUxa983fJ6sRJEeBqnXsZ9XVu88KsL4fdhGTZQqVrwmb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:AggregatorProxy",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:AggregatorProxy",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 197,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:AggregatorProxy",
								"label": "s_proposedAggregator",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(AggregatorProxyInterface)934"
							},
							{
								"astId": 201,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:AggregatorProxy",
								"label": "s_phaseAggregators",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_contract(AggregatorProxyInterface)934)"
							},
							{
								"astId": 203,
								"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:AggregatorProxy",
								"label": "s_currentPhase",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(Phase)195_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorProxyInterface)934": {
								"encoding": "inplace",
								"label": "contract AggregatorProxyInterface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_contract(AggregatorProxyInterface)934)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => contract AggregatorProxyInterface)",
								"numberOfBytes": "32",
								"value": "t_contract(AggregatorProxyInterface)934"
							},
							"t_struct(Phase)195_storage": {
								"encoding": "inplace",
								"label": "struct AggregatorProxy.Phase",
								"members": [
									{
										"astId": 192,
										"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:AggregatorProxy",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 194,
										"contract": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:AggregatorProxy",
										"label": "aggregator",
										"offset": 2,
										"slot": "0",
										"type": "t_contract(AggregatorProxyInterface)934"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"aggregator()": {
								"notice": "returns the current phase's aggregator address."
							},
							"confirmAggregator(address)": {
								"notice": "Allows the owner to confirm and change the address to the proposed aggregator"
							},
							"decimals()": {
								"notice": "represents the number of decimals the aggregator responses represent."
							},
							"description()": {
								"notice": "returns the description of the aggregator the proxy points to."
							},
							"getAnswer(uint256)": {
								"notice": "get past rounds answers"
							},
							"getRoundData(uint80)": {
								"notice": "get data about a round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values. Note that different underlying implementations of AggregatorV3Interface have slightly different semantics for some of the return values. Consumers should determine what implementations they expect to receive data from and validate that they can properly handle return data from all of them."
							},
							"getTimestamp(uint256)": {
								"notice": "get block timestamp when an answer was last updated"
							},
							"latestAnswer()": {
								"notice": "Reads the current answer from aggregator delegated to."
							},
							"latestRound()": {
								"notice": "get the latest completed round where the answer was updated. This ID includes the proxy's phase, to make sure round IDs increase even when switching to a newly deployed aggregator."
							},
							"latestRoundData()": {
								"notice": "get data about the latest round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values. Note that different underlying implementations of AggregatorV3Interface have slightly different semantics for some of the return values. Consumers should determine what implementations they expect to receive data from and validate that they can properly handle return data from all of them."
							},
							"latestTimestamp()": {
								"notice": "Reads the last updated height from aggregator delegated to."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"phaseAggregators(uint16)": {
								"notice": "return a phase aggregator using the phaseId"
							},
							"phaseId()": {
								"notice": "returns the current phase's ID."
							},
							"proposeAggregator(address)": {
								"notice": "Allows the owner to propose a new address for the aggregator"
							},
							"proposedAggregator()": {
								"notice": "returns the current proposed aggregator"
							},
							"proposedGetRoundData(uint80)": {
								"notice": "Used if an aggregator contract has been proposed."
							},
							"proposedLatestRoundData()": {
								"notice": "Used if an aggregator contract has been proposed."
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address, pending."
							},
							"version()": {
								"notice": "the version number representing the type of aggregator the proxy points to."
							}
						},
						"notice": "This contract provides a consistent address for the CurrentAnswerInterface but delegates where it reads from to the owner, who is trusted to update it.",
						"version": 1
					}
				}
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol": {
				"AggregatorInterface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int256",
									"name": "current",
									"type": "int256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"name": "AnswerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "startedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								}
							],
							"name": "NewRound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAnswer(uint256)": "b5ab58dc",
							"getTimestamp(uint256)": "b633620c",
							"latestAnswer()": "50d25bcd",
							"latestRound()": "668a0f02",
							"latestTimestamp()": "8205bf6a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol\":\"AggregatorInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x682963fa630d6afc8e1fcc5b3ee6b49ec1216f30ac698bca43747bd6e8a19fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d79e1f45993bd99c580bed23f1128d3b5e85c66a1399604c09066f4b26cdd8d8\",\"dweb:/ipfs/QmY1uVYYPspoMHMHLB6RiWaBD2WJqorYf3HGpMB4FqL9Vo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol": {
				"AggregatorProxyInterface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int256",
									"name": "current",
									"type": "int256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"name": "AnswerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "startedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								}
							],
							"name": "NewRound",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "aggregator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "phaseId",
									"type": "uint16"
								}
							],
							"name": "phaseAggregators",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "phaseId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proposedAggregator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								}
							],
							"name": "proposedGetRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "id",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proposedLatestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "id",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"aggregator()": "245a7bfc",
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getAnswer(uint256)": "b5ab58dc",
							"getRoundData(uint80)": "9a6fc8f5",
							"getTimestamp(uint256)": "b633620c",
							"latestAnswer()": "50d25bcd",
							"latestRound()": "668a0f02",
							"latestRoundData()": "feaf968c",
							"latestTimestamp()": "8205bf6a",
							"phaseAggregators(uint16)": "c1597304",
							"phaseId()": "58303b10",
							"proposedAggregator()": "e8c4be30",
							"proposedGetRoundData(uint80)": "6001ac53",
							"proposedLatestRoundData()": "8f6b4d91",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"phaseId\",\"type\":\"uint16\"}],\"name\":\"phaseAggregators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phaseId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedAggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"id\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedLatestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"id\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol\":\"AggregatorProxyInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x682963fa630d6afc8e1fcc5b3ee6b49ec1216f30ac698bca43747bd6e8a19fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d79e1f45993bd99c580bed23f1128d3b5e85c66a1399604c09066f4b26cdd8d8\",\"dweb:/ipfs/QmY1uVYYPspoMHMHLB6RiWaBD2WJqorYf3HGpMB4FqL9Vo\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol\":{\"keccak256\":\"0x835015c904e6b9b5c5ddf96f74b39a36c787dc7fa5ccd776ca0f02d0ce5cca90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dab9393973a5527bda1d96caf47518a71986824c30673ccf50b32034a1737542\",\"dweb:/ipfs/QmQ1zS4VHNQEWZbYFBakPBfaVizLU1yoJvfV8DdPxb96iV\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xc0c5994fc656e4393d2ca4e5128f658de92637346bbd943041c50d9ffbc8aa8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51b0829a4710485a63baac80f07cead98e82dd2da5ef94ef92940fde31e2c827\",\"dweb:/ipfs/QmPVQKfyq7GT8UjmztfNfsTfnkEJpxZZhLUWqaimkhgJoQ\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5cf082133e64f5f90f446c011681ea7ab719e2992c7247074b943771c176494a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7072938999863308ca3177b3ad71451e3639b16fbcfd3873bde1efd80386e1\",\"dweb:/ipfs/QmU3q5sCtSK7VM6tcvLfyUws1Z1WeYWeqCqBoecJwfAt5G\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol": {
				"AggregatorV2V3Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int256",
									"name": "current",
									"type": "int256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								}
							],
							"name": "AnswerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "startedBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								}
							],
							"name": "NewRound",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getAnswer(uint256)": "b5ab58dc",
							"getRoundData(uint80)": "9a6fc8f5",
							"getTimestamp(uint256)": "b633620c",
							"latestAnswer()": "50d25bcd",
							"latestRound()": "668a0f02",
							"latestRoundData()": "feaf968c",
							"latestTimestamp()": "8205bf6a",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol\":\"AggregatorV2V3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x682963fa630d6afc8e1fcc5b3ee6b49ec1216f30ac698bca43747bd6e8a19fd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d79e1f45993bd99c580bed23f1128d3b5e85c66a1399604c09066f4b26cdd8d8\",\"dweb:/ipfs/QmY1uVYYPspoMHMHLB6RiWaBD2WJqorYf3HGpMB4FqL9Vo\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xc0c5994fc656e4393d2ca4e5128f658de92637346bbd943041c50d9ffbc8aa8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51b0829a4710485a63baac80f07cead98e82dd2da5ef94ef92940fde31e2c827\",\"dweb:/ipfs/QmPVQKfyq7GT8UjmztfNfsTfnkEJpxZZhLUWqaimkhgJoQ\"]},\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5cf082133e64f5f90f446c011681ea7ab719e2992c7247074b943771c176494a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7072938999863308ca3177b3ad71451e3639b16fbcfd3873bde1efd80386e1\",\"dweb:/ipfs/QmU3q5sCtSK7VM6tcvLfyUws1Z1WeYWeqCqBoecJwfAt5G\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x5cf082133e64f5f90f446c011681ea7ab719e2992c7247074b943771c176494a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7072938999863308ca3177b3ad71451e3639b16fbcfd3873bde1efd80386e1\",\"dweb:/ipfs/QmU3q5sCtSK7VM6tcvLfyUws1Z1WeYWeqCqBoecJwfAt5G\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol": {
				"OwnableInterface": {
					"abi": [
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol\":\"OwnableInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0x5b0ba0302a06c80ff88368c02dab44a0d9b735a599ba6ff905284044f02f2932\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0163141ba0751e2f2cfd064e7bc4df7b0d586dafd4df2bff86a10d12f0c85ea2\",\"dweb:/ipfs/QmUUxa983fJ6sRJEeBqnXsZ9XVu88KsL4fdhGTZQqVrwmb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol:7:29: Warning: This declaration has the same name as another declaration.\n  function phaseAggregators(uint16 phaseId) external view returns (address);\n                            ^------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol:9:3: The other declaration is here:\n  function phaseId() external view returns (uint16);\n  ^------------------------------------------------^\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 292,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol",
						"message": "The other declaration is here:",
						"start": 242
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 204,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol",
					"start": 190
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:69:6: Warning: This declaration has the same name as another declaration.\n    (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId);\n     ^------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:264:3: The other declaration is here:\n  function phaseId() external view override returns (uint16) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10310,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
						"message": "The other declaration is here:",
						"start": 10216
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2749,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"start": 2735
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:70:5: Warning: This declaration has the same name as another declaration.\n    AggregatorProxyInterface aggregator = s_phaseAggregators[phaseId];\n    ^---------------------------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:257:3: The other declaration is here:\n  function aggregator() external view override returns (address) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10155,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
						"message": "The other declaration is here:",
						"start": 10040
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2837,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"start": 2802
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:88:6: Warning: This declaration has the same name as another declaration.\n    (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId);\n     ^------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:264:3: The other declaration is here:\n  function phaseId() external view override returns (uint16) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10310,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
						"message": "The other declaration is here:",
						"start": 10216
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3582,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"start": 3568
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:89:5: Warning: This declaration has the same name as another declaration.\n    AggregatorProxyInterface aggregator = s_phaseAggregators[phaseId];\n    ^---------------------------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:257:3: The other declaration is here:\n  function aggregator() external view override returns (address) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10155,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
						"message": "The other declaration is here:",
						"start": 10040
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3670,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"start": 3635
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:148:6: Warning: This declaration has the same name as another declaration.\n    (uint16 phaseId, uint64 aggregatorRoundId) = parseIds(roundId);\n     ^------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:264:3: The other declaration is here:\n  function phaseId() external view override returns (uint16) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10310,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
						"message": "The other declaration is here:",
						"start": 10216
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 6225,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"start": 6211
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:302:29: Warning: This declaration has the same name as another declaration.\n  function phaseAggregators(uint16 phaseId) external view override returns (address) {\n                            ^------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:264:3: The other declaration is here:\n  function phaseId() external view override returns (uint16) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10310,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
						"message": "The other declaration is here:",
						"start": 10216
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 11296,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"start": 11282
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:345:5: Warning: This declaration has the same name as another declaration.\n    uint16 phaseId = uint16(roundId >> PHASE_OFFSET);\n    ^------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:264:3: The other declaration is here:\n  function phaseId() external view override returns (uint16) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10310,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
						"message": "The other declaration is here:",
						"start": 10216
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 12986,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"start": 12972
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8760",
				"formattedMessage": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:357:5: Warning: This declaration has the same name as another declaration.\n    uint16 phaseId\n    ^------------^\n.deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol:264:3: The other declaration is here:\n  function phaseId() external view override returns (uint16) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "This declaration has the same name as another declaration.",
				"secondarySourceLocations": [
					{
						"end": 10310,
						"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
						"message": "The other declaration is here:",
						"start": 10216
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 13272,
					"file": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"start": 13258
				},
				"type": "Warning"
			}
		],
		"sources": {
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol": {
				"ast": {
					"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol",
					"exportedSymbols": {
						"ConfirmedOwner": [
							19
						],
						"ConfirmedOwnerWithProposal": [
							181
						],
						"OwnableInterface": [
							1005
						]
					},
					"id": 20,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol",
							"file": "./ConfirmedOwnerWithProposal.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 20,
							"sourceUnit": 182,
							"src": "57:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ConfirmedOwnerWithProposal",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 181,
										"src": "239:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ConfirmedOwnerWithProposal_$181",
											"typeString": "contract ConfirmedOwnerWithProposal"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "239:26:0"
								}
							],
							"contractDependencies": [
								181,
								1005
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "101:110:0",
								"text": " @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 19,
							"linearizedBaseContracts": [
								19,
								181,
								1005
							],
							"name": "ConfirmedOwner",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "349:2:0",
										"statements": []
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 10,
													"name": "newOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "327:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "345:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "337:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 11,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "337:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "337:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 15,
											"modifierName": {
												"id": 9,
												"name": "ConfirmedOwnerWithProposal",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 181,
												"src": "300:26:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ConfirmedOwnerWithProposal_$181_$",
													"typeString": "type(contract ConfirmedOwnerWithProposal)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "300:48:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "282:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:18:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:0:0"
									},
									"scope": 19,
									"src": "270:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 20,
							"src": "212:141:0"
						}
					],
					"src": "32:322:0"
				},
				"id": 0
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol": {
				"ast": {
					"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwnerWithProposal.sol",
					"exportedSymbols": {
						"ConfirmedOwnerWithProposal": [
							181
						],
						"OwnableInterface": [
							1005
						]
					},
					"id": 182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 21,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol",
							"file": "./interfaces/OwnableInterface.sol",
							"id": 22,
							"nodeType": "ImportDirective",
							"scope": 182,
							"sourceUnit": 1006,
							"src": "57:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "OwnableInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1005,
										"src": "252:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_OwnableInterface_$1005",
											"typeString": "contract OwnableInterface"
										}
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "252:16:1"
								}
							],
							"contractDependencies": [
								1005
							],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "102:110:1",
								"text": " @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 181,
							"linearizedBaseContracts": [
								181,
								1005
							],
							"name": "ConfirmedOwnerWithProposal",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "s_owner",
									"nodeType": "VariableDeclaration",
									"scope": 181,
									"src": "273:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "s_pendingOwner",
									"nodeType": "VariableDeclaration",
									"scope": 181,
									"src": "300:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "300:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 35,
									"name": "OwnershipTransferRequested",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "368:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "390:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:42:1"
									},
									"src": "335:75:1"
								},
								{
									"anonymous": false,
									"id": 41,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "440:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "462:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:42:1"
									},
									"src": "413:69:1"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "538:179:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 49,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "552:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "572:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "564:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 50,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "564:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "564:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "552:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "576:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																"typeString": "literal_string \"Cannot set owner to zero\""
															},
															"value": "Cannot set owner to zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																"typeString": "literal_string \"Cannot set owner to zero\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "544:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "544:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "544:59:1"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 58,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "610:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 59,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "620:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "610:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "610:18:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "662:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "654:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 63,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "654:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "654:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "638:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "IfStatement",
												"src": "634:79:1",
												"trueBody": {
													"id": 72,
													"nodeType": "Block",
													"src": "666:47:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 69,
																		"name": "pendingOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "693:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 68,
																	"name": "_transferOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "674:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "674:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 71,
															"nodeType": "ExpressionStatement",
															"src": "674:32:1"
														}
													]
												}
											}
										]
									},
									"id": 75,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "498:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "516:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:40:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:0:1"
									},
									"scope": 181,
									"src": "486:231:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "891:33:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "916:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 84,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "897:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "897:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "897:22:1"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "721:102:1",
										"text": " @notice Allows an owner to begin transferring ownership to a new address,\n pending."
									},
									"functionSelector": "f2fde38b",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 82,
											"modifierName": {
												"id": 81,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 180,
												"src": "881:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "881:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "872:8:1"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "853:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:12:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:0:1"
									},
									"scope": 181,
									"src": "826:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1061:220:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 95,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1075:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1075:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 97,
																"name": "s_pendingOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1089:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1075:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652070726f706f736564206f776e6572",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1105:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																"typeString": "literal_string \"Must be proposed owner\""
															},
															"value": "Must be proposed owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																"typeString": "literal_string \"Must be proposed owner\""
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1067:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1067:63:1"
											},
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "1137:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 102,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"id": 104,
													"name": "s_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1156:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:26:1"
											},
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1169:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 107,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1179:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1179:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1169:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1169:20:1"
											},
											{
												"expression": {
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 111,
														"name": "s_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1195:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1220:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1212:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 112,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1212:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1212:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1195:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1195:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 119,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1255:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 120,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1265:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1265:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 118,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1234:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1234:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "1229:47:1"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "928:85:1",
										"text": " @notice Allows an ownership transfer to be completed by the recipient."
									},
									"functionSelector": "79ba5097",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 92,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1052:8:1"
									},
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:0:1"
									},
									"scope": 181,
									"src": "1016:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										996
									],
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1388:25:1",
										"statements": [
											{
												"expression": {
													"id": 132,
													"name": "s_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 131,
												"id": 133,
												"nodeType": "Return",
												"src": "1394:14:1"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "1285:44:1",
										"text": " @notice Get the current owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1361:8:1"
									},
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:2:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1379:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:9:1"
									},
									"scope": 181,
									"src": "1332:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "1545:140:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 142,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "1559:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 143,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1565:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1565:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1559:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1577:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																"typeString": "literal_string \"Cannot transfer to self\""
															},
															"value": "Cannot transfer to self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																"typeString": "literal_string \"Cannot transfer to self\""
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1551:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1551:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1551:52:1"
											},
											{
												"expression": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 149,
														"name": "s_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1610:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 150,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "1627:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1610:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1610:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 154,
															"name": "s_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1677:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 153,
														"name": "OwnershipTransferRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1641:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1641:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "EmitStatement",
												"src": "1636:44:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "1417:77:1",
										"text": " @notice validate, transfer ownership, and emit relevant events"
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1525:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1524:12:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1545:0:1"
									},
									"scope": 181,
									"src": "1497:188:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1774:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 164,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1788:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1788:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 166,
																"name": "s_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1802:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1788:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1811:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																"typeString": "literal_string \"Only callable by owner\""
															},
															"value": "Only callable by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																"typeString": "literal_string \"Only callable by owner\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1780:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1780:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1780:56:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "1689:38:1",
										"text": " @notice validate access"
									},
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:2:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1774:0:1"
									},
									"scope": 181,
									"src": "1730:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "1950:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 175,
														"name": "_validateOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "1956:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1956:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1956:20:1"
											},
											{
												"id": 178,
												"nodeType": "PlaceholderStatement",
												"src": "1982:1:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "1845:81:1",
										"text": " @notice Reverts if called by anyone other than the contract owner."
									},
									"id": 180,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:2:1"
									},
									"src": "1929:59:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 182,
							"src": "213:1777:1"
						}
					],
					"src": "32:1959:1"
				},
				"id": 1
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol": {
				"ast": {
					"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/dev/AggregatorProxy.sol",
					"exportedSymbols": {
						"AggregatorInterface": [
							878
						],
						"AggregatorProxy": [
							830
						],
						"AggregatorProxyInterface": [
							934
						],
						"AggregatorV2V3Interface": [
							943
						],
						"AggregatorV3Interface": [
							989
						],
						"ConfirmedOwner": [
							19
						],
						"ConfirmedOwnerWithProposal": [
							181
						],
						"OwnableInterface": [
							1005
						]
					},
					"id": 831,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 183,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/ConfirmedOwner.sol",
							"file": "../ConfirmedOwner.sol",
							"id": 184,
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 20,
							"src": "57:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol",
							"file": "../interfaces/AggregatorProxyInterface.sol",
							"id": 185,
							"nodeType": "ImportDirective",
							"scope": 831,
							"sourceUnit": 935,
							"src": "89:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 187,
										"name": "AggregatorProxyInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 934,
										"src": "423:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
											"typeString": "contract AggregatorProxyInterface"
										}
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "423:24:2"
								},
								{
									"baseName": {
										"id": 189,
										"name": "ConfirmedOwner",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 19,
										"src": "449:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ConfirmedOwner_$19",
											"typeString": "contract ConfirmedOwner"
										}
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "449:14:2"
								}
							],
							"contractDependencies": [
								19,
								181,
								878,
								934,
								943,
								989,
								1005
							],
							"contractKind": "contract",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "143:251:2",
								"text": " @title A trusted proxy for updating where current answers are read from\n @notice This contract provides a consistent address for the\n CurrentAnswerInterface but delegates where it reads from to the owner, who is\n trusted to update it."
							},
							"fullyImplemented": true,
							"id": 830,
							"linearizedBaseContracts": [
								830,
								19,
								181,
								1005,
								934,
								943,
								989,
								878
							],
							"name": "AggregatorProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AggregatorProxy.Phase",
									"id": 195,
									"members": [
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "id",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "487:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 191,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "487:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "aggregator",
											"nodeType": "VariableDeclaration",
											"scope": 195,
											"src": "502:35:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
												"typeString": "contract AggregatorProxyInterface"
											},
											"typeName": {
												"id": 193,
												"name": "AggregatorProxyInterface",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 934,
												"src": "502:24:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
													"typeString": "contract AggregatorProxyInterface"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Phase",
									"nodeType": "StructDefinition",
									"scope": 830,
									"src": "468:74:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "s_proposedAggregator",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "545:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
										"typeString": "contract AggregatorProxyInterface"
									},
									"typeName": {
										"id": 196,
										"name": "AggregatorProxyInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 934,
										"src": "545:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
											"typeString": "contract AggregatorProxyInterface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "s_phaseAggregators",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "602:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_contract$_AggregatorProxyInterface_$934_$",
										"typeString": "mapping(uint16 => contract AggregatorProxyInterface)"
									},
									"typeName": {
										"id": 200,
										"keyType": {
											"id": 198,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "610:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "602:43:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_contract$_AggregatorProxyInterface_$934_$",
											"typeString": "mapping(uint16 => contract AggregatorProxyInterface)"
										},
										"valueType": {
											"id": 199,
											"name": "AggregatorProxyInterface",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 934,
											"src": "620:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
												"typeString": "contract AggregatorProxyInterface"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "s_currentPhase",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "676:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Phase_$195_storage",
										"typeString": "struct AggregatorProxy.Phase"
									},
									"typeName": {
										"id": 202,
										"name": "Phase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 195,
										"src": "676:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Phase_$195_storage_ptr",
											"typeString": "struct AggregatorProxy.Phase"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 206,
									"mutability": "constant",
									"name": "PHASE_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "709:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "709:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "749:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 209,
									"mutability": "constant",
									"name": "PHASE_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "755:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "755:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3136",
										"id": 208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "793:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 219,
									"mutability": "constant",
									"name": "MAX_ID",
									"nodeType": "VariableDeclaration",
									"scope": 830,
									"src": "799:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "799:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 216,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 211,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "833:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 212,
															"name": "PHASE_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "837:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 213,
															"name": "PHASE_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "852:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "837:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 215,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "836:27:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "833:30:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 217,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "866:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "833:34:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 225,
									"name": "AggregatorProposed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"mutability": "mutable",
												"name": "current",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "897:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposed",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "922:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:51:2"
									},
									"src": "872:76:2"
								},
								{
									"anonymous": false,
									"id": 231,
									"name": "AggregatorConfirmed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "previous",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "977:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "latest",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1003:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:50:2"
									},
									"src": "951:76:2"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1097:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 241,
															"name": "aggregatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1117:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 240,
														"name": "setAggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "1103:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "1103:32:2"
											}
										]
									},
									"id": 245,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 236,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1085:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1085:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 238,
											"modifierName": {
												"id": 235,
												"name": "ConfirmedOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 19,
												"src": "1070:14:2",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ConfirmedOwner_$19_$",
													"typeString": "type(contract ConfirmedOwner)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1070:26:2"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "aggregatorAddress",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1043:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:27:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:0:2"
									},
									"scope": 830,
									"src": "1031:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "1600:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 252,
																"name": "s_currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "1613:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_storage",
																	"typeString": "struct AggregatorProxy.Phase storage ref"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "1613:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestAnswer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "1613:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
															"typeString": "function () view external returns (int256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1613:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 251,
												"id": 256,
												"nodeType": "Return",
												"src": "1606:47:2"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1144:376:2",
										"text": " @notice Reads the current answer from aggregator delegated to.\n @dev #[deprecated] Use latestRoundData instead. This does not error if no\n answer has been reached, it will simply return 0. Either wait to point to\n an already answered Aggregator or use the recommended latestRoundData\n instead which includes better verification information."
									},
									"functionSelector": "50d25bcd",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "latestAnswer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1567:8:2"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1544:2:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1585:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 249,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1584:15:2"
									},
									"scope": 830,
									"src": "1523:135:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "2130:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 265,
																"name": "s_currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2143:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_storage",
																	"typeString": "struct AggregatorProxy.Phase storage ref"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "2143:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 842,
														"src": "2143:41:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 269,
												"nodeType": "Return",
												"src": "2136:50:2"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1662:381:2",
										"text": " @notice Reads the last updated height from aggregator delegated to.\n @dev #[deprecated] Use latestRoundData instead. This does not error if no\n answer has been reached, it will simply return 0. Either wait to point to\n an already answered Aggregator or use the recommended latestRoundData\n instead which includes better verification information."
									},
									"functionSelector": "8205bf6a",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "latestTimestamp",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2093:8:2"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:2:2"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2111:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2110:19:2"
									},
									"scope": 830,
									"src": "2046:145:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2691:287:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 280,
														"name": "roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "2701:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 281,
														"name": "MAX_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "2711:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2701:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "2697:30:2",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2726:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 279,
													"id": 284,
													"nodeType": "Return",
													"src": "2719:8:2"
												}
											},
											{
												"assignments": [
													287,
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "phaseId",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "2735:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 286,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "2735:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "aggregatorRoundId",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "2751:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 288,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "2751:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"arguments": [
														{
															"id": 291,
															"name": "roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "2788:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"name": "parseIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "2779:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$_t_uint64_$",
															"typeString": "function (uint256) pure returns (uint16,uint64)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint16_$_t_uint64_$",
														"typeString": "tuple(uint16,uint64)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2734:62:2"
											},
											{
												"assignments": [
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "aggregator",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "2802:35:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
															"typeString": "contract AggregatorProxyInterface"
														},
														"typeName": {
															"id": 294,
															"name": "AggregatorProxyInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 934,
															"src": "2802:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"baseExpression": {
														"id": 296,
														"name": "s_phaseAggregators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "2840:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_contract$_AggregatorProxyInterface_$934_$",
															"typeString": "mapping(uint16 => contract AggregatorProxyInterface)"
														}
													},
													"id": 298,
													"indexExpression": {
														"id": 297,
														"name": "phaseId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "2859:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2840:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
														"typeString": "contract AggregatorProxyInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2802:65:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 302,
																"name": "aggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2885:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																	"typeString": "contract AggregatorProxyInterface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																	"typeString": "contract AggregatorProxyInterface"
																}
															],
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2877:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 300,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2877:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2877:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2908:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 304,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2900:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2900:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2877:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "2873:47:2",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2919:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 279,
													"id": 310,
													"nodeType": "Return",
													"src": "2912:8:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 314,
															"name": "aggregatorRoundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "2955:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 312,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "2934:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAnswer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 854,
														"src": "2934:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_int256_$",
															"typeString": "function (uint256) view external returns (int256)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2934:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 279,
												"id": 316,
												"nodeType": "Return",
												"src": "2927:46:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "2195:404:2",
										"text": " @notice get past rounds answers\n @param roundId the answer number to retrieve the answer for\n @dev #[deprecated] Use getRoundData instead. This does not error if no\n answer has been reached, it will simply return 0. Either wait to point to\n an already answered Aggregator or use the recommended getRoundData\n instead which includes better verification information."
									},
									"functionSelector": "b5ab58dc",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAnswer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 276,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2658:8:2"
									},
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2621:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2620:17:2"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2676:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 277,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2676:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:15:2"
									},
									"scope": 830,
									"src": "2602:376:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										861
									],
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "3524:290:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "3534:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 328,
														"name": "MAX_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "3544:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3534:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "IfStatement",
												"src": "3530:30:2",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3559:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 326,
													"id": 331,
													"nodeType": "Return",
													"src": "3552:8:2"
												}
											},
											{
												"assignments": [
													334,
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "phaseId",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "3568:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 333,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3568:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "aggregatorRoundId",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "3584:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 335,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3584:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [
														{
															"id": 338,
															"name": "roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "3621:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 337,
														"name": "parseIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3612:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$_t_uint64_$",
															"typeString": "function (uint256) pure returns (uint16,uint64)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3612:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint16_$_t_uint64_$",
														"typeString": "tuple(uint16,uint64)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3567:62:2"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "aggregator",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "3635:35:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
															"typeString": "contract AggregatorProxyInterface"
														},
														"typeName": {
															"id": 341,
															"name": "AggregatorProxyInterface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 934,
															"src": "3635:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"baseExpression": {
														"id": 343,
														"name": "s_phaseAggregators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3673:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_contract$_AggregatorProxyInterface_$934_$",
															"typeString": "mapping(uint16 => contract AggregatorProxyInterface)"
														}
													},
													"id": 345,
													"indexExpression": {
														"id": 344,
														"name": "phaseId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3692:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3673:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
														"typeString": "contract AggregatorProxyInterface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3635:65:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 349,
																"name": "aggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "3718:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																	"typeString": "contract AggregatorProxyInterface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																	"typeString": "contract AggregatorProxyInterface"
																}
															],
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3710:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 347,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3710:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3710:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3741:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3733:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 351,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3733:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3733:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3710:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "3706:47:2",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3752:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 326,
													"id": 357,
													"nodeType": "Return",
													"src": "3745:8:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "aggregatorRoundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "3791:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 359,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "3767:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "3767:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3767:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 363,
												"nodeType": "Return",
												"src": "3760:49:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2982:443:2",
										"text": " @notice get block timestamp when an answer was last updated\n @param roundId the answer number to retrieve the updated timestamp for\n @dev #[deprecated] Use getRoundData instead. This does not error if no\n answer has been reached, it will simply return 0. Either wait to point to\n an already answered Aggregator or use the recommended getRoundData\n instead which includes better verification information."
									},
									"functionSelector": "b633620c",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimestamp",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 323,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3487:8:2"
									},
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:17:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3505:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3504:19:2"
									},
									"scope": 830,
									"src": "3428:386:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										847
									],
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "4411:140:2",
										"statements": [
											{
												"assignments": [
													373
												],
												"declarations": [
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "phase",
														"nodeType": "VariableDeclaration",
														"scope": 388,
														"src": "4417:18:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Phase_$195_memory_ptr",
															"typeString": "struct AggregatorProxy.Phase"
														},
														"typeName": {
															"id": 372,
															"name": "Phase",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 195,
															"src": "4417:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Phase_$195_storage_ptr",
																"typeString": "struct AggregatorProxy.Phase"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"id": 374,
													"name": "s_currentPhase",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "4438:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Phase_$195_storage",
														"typeString": "struct AggregatorProxy.Phase storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4417:35:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 377,
																"name": "phase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "4497:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_memory_ptr",
																	"typeString": "struct AggregatorProxy.Phase memory"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 192,
															"src": "4497:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"expression": {
																				"id": 381,
																				"name": "phase",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 373,
																				"src": "4514:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Phase_$195_memory_ptr",
																					"typeString": "struct AggregatorProxy.Phase memory"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "aggregator",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 194,
																			"src": "4514:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																				"typeString": "contract AggregatorProxyInterface"
																			}
																		},
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "latestRound",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 847,
																		"src": "4514:28:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4514:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4507:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint64_$",
																	"typeString": "type(uint64)"
																},
																"typeName": {
																	"id": 379,
																	"name": "uint64",
																	"nodeType": "ElementaryTypeName",
																	"src": "4507:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4507:38:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 376,
														"name": "addPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "4488:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint64_$returns$_t_uint80_$",
															"typeString": "function (uint16,uint64) pure returns (uint80)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4488:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 371,
												"id": 387,
												"nodeType": "Return",
												"src": "4481:65:2"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "3818:512:2",
										"text": " @notice get the latest completed round where the answer was updated. This\n ID includes the proxy's phase, to make sure round IDs increase even when\n switching to a newly deployed aggregator.\n @dev #[deprecated] Use latestRoundData instead. This does not error if no\n answer has been reached, it will simply return 0. Either wait to point to\n an already answered Aggregator or use the recommended latestRoundData\n instead which includes better verification information."
									},
									"functionSelector": "668a0f02",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "latestRound",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 368,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4376:8:2"
									},
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4353:2:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "4394:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4393:17:2"
									},
									"scope": 830,
									"src": "4333:218:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										975
									],
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "6204:278:2",
										"statements": [
											{
												"assignments": [
													407,
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "phaseId",
														"nodeType": "VariableDeclaration",
														"scope": 437,
														"src": "6211:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 406,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "6211:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "aggregatorRoundId",
														"nodeType": "VariableDeclaration",
														"scope": 437,
														"src": "6227:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 408,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "6227:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"arguments": [
														{
															"id": 411,
															"name": "roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "6264:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														],
														"id": 410,
														"name": "parseIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "6255:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$_t_uint64_$",
															"typeString": "function (uint256) pure returns (uint16,uint64)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6255:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint16_$_t_uint64_$",
														"typeString": "tuple(uint16,uint64)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6210:62:2"
											},
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 414,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "6280:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																}
															},
															{
																"id": 415,
																"name": "answer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "6284:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 416,
																"name": "startedAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "6292:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 417,
																"name": "updatedAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "6303:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 418,
																"name": "answeredInRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "6314:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																}
															}
														],
														"id": 419,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6279:51:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 424,
																"name": "aggregatorRoundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "6374:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 420,
																	"name": "s_phaseAggregators",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6333:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint16_$_t_contract$_AggregatorProxyInterface_$934_$",
																		"typeString": "mapping(uint16 => contract AggregatorProxyInterface)"
																	}
																},
																"id": 422,
																"indexExpression": {
																	"id": 421,
																	"name": "phaseId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "6352:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6333:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																	"typeString": "contract AggregatorProxyInterface"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getRoundData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 975,
															"src": "6333:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																"typeString": "function (uint80) view external returns (uint80,int256,uint256,uint256,uint80)"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6333:59:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
														}
													},
													"src": "6279:113:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "6279:113:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														{
															"id": 430,
															"name": "answer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6422:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 431,
															"name": "startedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "6430:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 432,
															"name": "updatedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "6441:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 433,
															"name": "answeredInRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "6452:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														{
															"id": 434,
															"name": "phaseId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "6469:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 428,
														"name": "addPhaseIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "6406:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$_t_uint16_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function (uint80,int256,uint256,uint256,uint80,uint16) pure returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6406:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"functionReturnParameters": 405,
												"id": 436,
												"nodeType": "Return",
												"src": "6399:78:2"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "4555:1424:2",
										"text": " @notice get data about a round. Consumers are encouraged to check\n that they're receiving fresh data by inspecting the updatedAt and\n answeredInRound return values.\n Note that different underlying implementations of AggregatorV3Interface\n have slightly different semantics for some of the return values. Consumers\n should determine what implementations they expect to receive\n data from and validate that they can properly handle return data from all\n of them.\n @param roundId the requested round ID as presented through the proxy, this\n is made up of the aggregator's round ID with the phase ID encoded in the\n two highest order bytes\n @return id is the round ID from the aggregator for which the data was\n retrieved combined with an phase to ensure that round IDs get larger as\n time moves forward.\n @return answer is the answer for the given round\n @return startedAt is the timestamp when the round was started.\n (Only some AggregatorV3Interface implementations return meaningful values)\n @return updatedAt is the timestamp when the round last was updated (i.e.\n answer was last computed)\n @return answeredInRound is the round ID of the round in which the answer\n was computed.\n (Only some AggregatorV3Interface implementations return meaningful values)\n @dev Note that answer and updatedAt may change between queries."
									},
									"functionSelector": "9a6fc8f5",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 394,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6056:8:2"
									},
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "6004:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 391,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "6004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6003:16:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "6085:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 395,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "6085:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "6102:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 397,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6102:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "6123:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6123:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "6148:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "6173:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 403,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "6173:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6077:124:2"
									},
									"scope": 830,
									"src": "5982:500:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										988
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "7946:256:2",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "current",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "7952:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Phase_$195_memory_ptr",
															"typeString": "struct AggregatorProxy.Phase"
														},
														"typeName": {
															"id": 453,
															"name": "Phase",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 195,
															"src": "7952:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Phase_$195_storage_ptr",
																"typeString": "struct AggregatorProxy.Phase"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"id": 455,
													"name": "s_currentPhase",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "7975:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Phase_$195_storage",
														"typeString": "struct AggregatorProxy.Phase storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7952:37:2"
											},
											{
												"expression": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 457,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "8020:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																}
															},
															{
																"id": 458,
																"name": "answer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "8024:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 459,
																"name": "startedAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "8032:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 460,
																"name": "updatedAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "8043:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 461,
																"name": "answeredInRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "8054:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																}
															}
														],
														"id": 462,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "8019:51:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 463,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "8073:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Phase_$195_memory_ptr",
																		"typeString": "struct AggregatorProxy.Phase memory"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "aggregator",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 194,
																"src": "8073:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																	"typeString": "contract AggregatorProxyInterface"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "latestRoundData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 988,
															"src": "8073:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8073:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
														}
													},
													"src": "8019:90:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "8019:90:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "8135:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														{
															"id": 471,
															"name": "answer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "8139:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 472,
															"name": "startedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8147:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 473,
															"name": "updatedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "8158:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 474,
															"name": "answeredInRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "8169:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														{
															"expression": {
																"id": 475,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8186:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_memory_ptr",
																	"typeString": "struct AggregatorProxy.Phase memory"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 192,
															"src": "8186:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 469,
														"name": "addPhaseIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "8123:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$_t_uint16_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function (uint80,int256,uint256,uint256,uint80,uint16) pure returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8123:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"functionReturnParameters": 452,
												"id": 478,
												"nodeType": "Return",
												"src": "8116:81:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "6486:1246:2",
										"text": " @notice get data about the latest round. Consumers are encouraged to check\n that they're receiving fresh data by inspecting the updatedAt and\n answeredInRound return values.\n Note that different underlying implementations of AggregatorV3Interface\n have slightly different semantics for some of the return values. Consumers\n should determine what implementations they expect to receive\n data from and validate that they can properly handle return data from all\n of them.\n @return id is the round ID from the aggregator for which the data was\n retrieved combined with an phase to ensure that round IDs get larger as\n time moves forward.\n @return answer is the answer for the given round\n @return startedAt is the timestamp when the round was started.\n (Only some AggregatorV3Interface implementations return meaningful values)\n @return updatedAt is the timestamp when the round last was updated (i.e.\n answer was last computed)\n @return answeredInRound is the round ID of the round in which the answer\n was computed.\n (Only some AggregatorV3Interface implementations return meaningful values)\n @dev Note that answer and updatedAt may change between queries."
									},
									"functionSelector": "feaf968c",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7798:8:2"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7759:2:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7827:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 442,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "7827:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7844:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 444,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7844:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7865:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7865:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7890:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7890:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7915:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 450,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "7915:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7819:124:2"
									},
									"scope": 830,
									"src": "7735:467:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										915
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "9062:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "9109:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														],
														"expression": {
															"id": 499,
															"name": "s_proposedAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "9075:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 975,
														"src": "9075:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function (uint80) view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9075:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"functionReturnParameters": 498,
												"id": 503,
												"nodeType": "Return",
												"src": "9068:49:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "8206:605:2",
										"text": " @notice Used if an aggregator contract has been proposed.\n @param roundId the round ID to retrieve the round data for\n @return id is the round ID for which data was retrieved\n @return answer is the answer for the given round\n @return startedAt is the timestamp when the round was started.\n (Only some AggregatorV3Interface implementations return meaningful values)\n @return updatedAt is the timestamp when the round last was updated (i.e.\n answer was last computed)\n @return answeredInRound is the round ID of the round in which the answer\n was computed."
									},
									"functionSelector": "6001ac53",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 487,
											"modifierName": {
												"id": 486,
												"name": "hasProposal",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 829,
												"src": "8911:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8911:11:2"
										}
									],
									"name": "proposedGetRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 485,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8898:8:2"
									},
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "8844:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 482,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "8844:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8843:16:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "8943:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 488,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "8943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "8960:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 490,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8960:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "8981:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "9006:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9006:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "9031:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 496,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "9031:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8935:124:2"
									},
									"scope": 830,
									"src": "8814:308:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										928
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "9907:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 522,
															"name": "s_proposedAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "9920:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 988,
														"src": "9920:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "9913:45:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "9126:541:2",
										"text": " @notice Used if an aggregator contract has been proposed.\n @return id is the round ID for which data was retrieved\n @return answer is the answer for the given round\n @return startedAt is the timestamp when the round was started.\n (Only some AggregatorV3Interface implementations return meaningful values)\n @return updatedAt is the timestamp when the round last was updated (i.e.\n answer was last computed)\n @return answeredInRound is the round ID of the round in which the answer\n was computed."
									},
									"functionSelector": "8f6b4d91",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 510,
											"modifierName": {
												"id": 509,
												"name": "hasProposal",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 829,
												"src": "9756:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9756:11:2"
										}
									],
									"name": "proposedLatestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 508,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9743:8:2"
									},
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9702:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "9788:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 511,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "9788:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "9805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 513,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "9826:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9826:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "9851:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "9876:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 519,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "9876:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9780:124:2"
									},
									"scope": 830,
									"src": "9670:293:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										933
									],
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "10103:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 536,
																"name": "s_currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "10124:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_storage",
																	"typeString": "struct AggregatorProxy.Phase storage ref"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "10124:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														],
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10116:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10116:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10116:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 533,
												"id": 539,
												"nodeType": "Return",
												"src": "10109:41:2"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "9967:70:2",
										"text": " @notice returns the current phase's aggregator address."
									},
									"functionSelector": "245a7bfc",
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "aggregator",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10076:8:2"
									},
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10059:2:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "10094:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10093:9:2"
									},
									"scope": 830,
									"src": "10040:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										895
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "10275:35:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 548,
														"name": "s_currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "10288:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Phase_$195_storage",
															"typeString": "struct AggregatorProxy.Phase storage ref"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "id",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 192,
													"src": "10288:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 547,
												"id": 550,
												"nodeType": "Return",
												"src": "10281:24:2"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "10159:54:2",
										"text": " @notice returns the current phase's ID."
									},
									"functionSelector": "58303b10",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "phaseId",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 544,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10249:8:2"
									},
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:2:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "10267:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 545,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10267:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10266:8:2"
									},
									"scope": 830,
									"src": "10216:94:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										950
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "10468:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 559,
																"name": "s_currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "10481:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_storage",
																	"typeString": "struct AggregatorProxy.Phase storage ref"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "10481:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "10481:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10481:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 558,
												"id": 563,
												"nodeType": "Return",
												"src": "10474:43:2"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "10314:92:2",
										"text": " @notice represents the number of decimals the aggregator responses represent."
									},
									"functionSelector": "313ce567",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 555,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10443:8:2"
									},
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10426:2:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "10461:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 556,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10461:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10460:7:2"
									},
									"scope": 830,
									"src": "10409:113:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										960
									],
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "10692:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 572,
																"name": "s_currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "10705:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_storage",
																	"typeString": "struct AggregatorProxy.Phase storage ref"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "10705:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "version",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "10705:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 571,
												"id": 576,
												"nodeType": "Return",
												"src": "10698:42:2"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "10526:103:2",
										"text": " @notice the version number representing the type of aggregator the proxy\n points to."
									},
									"functionSelector": "54fd4d50",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10665:8:2"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10648:2:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "10683:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10682:9:2"
									},
									"scope": 830,
									"src": "10632:113:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "10907:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 585,
																"name": "s_currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "10920:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_storage",
																	"typeString": "struct AggregatorProxy.Phase storage ref"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "10920:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "description",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "10920:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view external returns (string memory)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10920:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 584,
												"id": 589,
												"nodeType": "Return",
												"src": "10913:46:2"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "10749:85:2",
										"text": " @notice returns the description of the aggregator the proxy points to."
									},
									"functionSelector": "7284e416",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 581,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10874:8:2"
									},
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10857:2:2"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "10892:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10892:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10891:15:2"
									},
									"scope": 830,
									"src": "10837:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										900
									],
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "11104:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "s_proposedAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "11125:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														],
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11117:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 598,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11117:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11117:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 597,
												"id": 602,
												"nodeType": "Return",
												"src": "11110:36:2"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "10968:62:2",
										"text": " @notice returns the current proposed aggregator"
									},
									"functionSelector": "e8c4be30",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proposedAggregator",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 594,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11077:8:2"
									},
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11060:2:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "11095:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11095:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11094:9:2"
									},
									"scope": 830,
									"src": "11033:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "11339:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 615,
																"name": "s_phaseAggregators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "11360:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint16_$_t_contract$_AggregatorProxyInterface_$934_$",
																	"typeString": "mapping(uint16 => contract AggregatorProxyInterface)"
																}
															},
															"id": 617,
															"indexExpression": {
																"id": 616,
																"name": "phaseId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "11379:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11360:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														],
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11352:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 613,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11352:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11352:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 612,
												"id": 619,
												"nodeType": "Return",
												"src": "11345:43:2"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "11155:98:2",
										"text": " @notice return a phase aggregator using the phaseId\n @param phaseId uint16"
									},
									"functionSelector": "c1597304",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "phaseAggregators",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 609,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11312:8:2"
									},
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "phaseId",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "11282:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 606,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11282:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11281:16:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "11330:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11329:9:2"
									},
									"scope": 830,
									"src": "11256:137:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "11630:161:2",
										"statements": [
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 629,
														"name": "s_proposedAggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "11636:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
															"typeString": "contract AggregatorProxyInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 631,
																"name": "aggregatorAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "11684:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 630,
															"name": "AggregatorProxyInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "11659:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorProxyInterface_$934_$",
																"typeString": "type(contract AggregatorProxyInterface)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11659:43:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
															"typeString": "contract AggregatorProxyInterface"
														}
													},
													"src": "11636:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
														"typeString": "contract AggregatorProxyInterface"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "11636:66:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 638,
																		"name": "s_currentPhase",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "11740:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Phase_$195_storage",
																			"typeString": "struct AggregatorProxy.Phase storage ref"
																		}
																	},
																	"id": 639,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "aggregator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 194,
																	"src": "11740:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																		"typeString": "contract AggregatorProxyInterface"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																		"typeString": "contract AggregatorProxyInterface"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11732:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11732:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11732:34:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "aggregatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "11768:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 635,
														"name": "AggregatorProposed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "11713:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11713:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "EmitStatement",
												"src": "11708:78:2"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "11397:157:2",
										"text": " @notice Allows the owner to propose a new address for the aggregator\n @param aggregatorAddress The new address for the aggregator contract"
									},
									"functionSelector": "f8a2abd3",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 627,
											"modifierName": {
												"id": 626,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 180,
												"src": "11620:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11620:9:2"
										}
									],
									"name": "proposeAggregator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "aggregatorAddress",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "11584:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11584:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11583:27:2"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 830,
									"src": "11557:234:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "12137:310:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 654,
																"name": "aggregatorAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "12151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 657,
																		"name": "s_proposedAggregator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "12180:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																			"typeString": "contract AggregatorProxyInterface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																			"typeString": "contract AggregatorProxyInterface"
																		}
																	],
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12172:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 655,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12172:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12172:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12151:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f706f7365642061676772656761746f72",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12203:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcd6bd4b59ffeb26c24e23930a7a3abcff5e13dc6132f23cefbea87a5a673b22",
																"typeString": "literal_string \"Invalid proposed aggregator\""
															},
															"value": "Invalid proposed aggregator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcd6bd4b59ffeb26c24e23930a7a3abcff5e13dc6132f23cefbea87a5a673b22",
																"typeString": "literal_string \"Invalid proposed aggregator\""
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12143:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12143:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "12143:90:2"
											},
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "previousAggregator",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "12239:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 663,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12239:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 667,
																"name": "s_currentPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "12276:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Phase_$195_storage",
																	"typeString": "struct AggregatorProxy.Phase storage ref"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 194,
															"src": "12276:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																"typeString": "contract AggregatorProxyInterface"
															}
														],
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12268:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 665,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12268:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12268:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12239:63:2"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12308:27:2",
													"subExpression": {
														"id": 671,
														"name": "s_proposedAggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "12315:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
															"typeString": "contract AggregatorProxyInterface"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "12308:27:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 675,
															"name": "aggregatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "12355:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 674,
														"name": "setAggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "12341:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12341:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "12341:32:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 679,
															"name": "previousAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "12404:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "aggregatorAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "12424:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 678,
														"name": "AggregatorConfirmed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "12384:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12384:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "EmitStatement",
												"src": "12379:63:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "11795:266:2",
										"text": " @notice Allows the owner to confirm and change the address\n to the proposed aggregator\n @dev Reverts if the given address doesn't match what was previously\n proposed\n @param aggregatorAddress The new address for the aggregator contract"
									},
									"functionSelector": "a928c096",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 651,
											"modifierName": {
												"id": 650,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 180,
												"src": "12127:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12127:9:2"
										}
									],
									"name": "confirmAggregator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "aggregatorAddress",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "12091:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12091:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12090:27:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12137:0:2"
									},
									"scope": 830,
									"src": "12064:383:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "12536:195:2",
										"statements": [
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "id",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "12542:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 689,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "12542:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 691,
															"name": "s_currentPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "12554:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Phase_$195_storage",
																"typeString": "struct AggregatorProxy.Phase storage ref"
															}
														},
														"id": 692,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "12554:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12574:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12554:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12542:33:2"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 696,
														"name": "s_currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "12581:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Phase_$195_storage",
															"typeString": "struct AggregatorProxy.Phase storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 698,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "12604:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"id": 700,
																		"name": "aggregatorAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "12633:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 699,
																	"name": "AggregatorProxyInterface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "12608:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AggregatorProxyInterface_$934_$",
																		"typeString": "type(contract AggregatorProxyInterface)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12608:43:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																	"typeString": "contract AggregatorProxyInterface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																	"typeString": "contract AggregatorProxyInterface"
																}
															],
															"id": 697,
															"name": "Phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "12598:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Phase_$195_storage_ptr_$",
																"typeString": "type(struct AggregatorProxy.Phase storage pointer)"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12598:54:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Phase_$195_memory_ptr",
															"typeString": "struct AggregatorProxy.Phase memory"
														}
													},
													"src": "12581:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Phase_$195_storage",
														"typeString": "struct AggregatorProxy.Phase storage ref"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "12581:71:2"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 705,
															"name": "s_phaseAggregators",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "12658:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_contract$_AggregatorProxyInterface_$934_$",
																"typeString": "mapping(uint16 => contract AggregatorProxyInterface)"
															}
														},
														"id": 707,
														"indexExpression": {
															"id": 706,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "12677:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12658:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
															"typeString": "contract AggregatorProxyInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 709,
																"name": "aggregatorAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "12708:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 708,
															"name": "AggregatorProxyInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "12683:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorProxyInterface_$934_$",
																"typeString": "type(contract AggregatorProxyInterface)"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12683:43:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
															"typeString": "contract AggregatorProxyInterface"
														}
													},
													"src": "12658:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
														"typeString": "contract AggregatorProxyInterface"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "12658:68:2"
											}
										]
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAggregator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "aggregatorAddress",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "12500:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12500:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12499:27:2"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12536:0:2"
									},
									"scope": 830,
									"src": "12477:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "12817:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 727,
																					"name": "phase",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "12846:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12838:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 725,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12838:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12838:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 729,
																			"name": "PHASE_OFFSET",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 206,
																			"src": "12856:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12838:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 731,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12837:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"id": 732,
																"name": "originalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "12872:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "12837:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12830:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 723,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12830:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12830:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 722,
												"id": 735,
												"nodeType": "Return",
												"src": "12823:60:2"
											}
										]
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addPhase",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "phase",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "12753:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 715,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12753:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "originalId",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "12767:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 717,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "12767:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12752:33:2"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "12809:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 720,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12809:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12808:8:2"
									},
									"scope": 830,
									"src": "12735:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "12966:149:2",
										"statements": [
											{
												"assignments": [
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "phaseId",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "12972:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 746,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "12972:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 750,
																"name": "roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "12996:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 751,
																"name": "PHASE_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "13007:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12996:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 748,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12972:48:2"
											},
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "aggregatorRoundId",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "13026:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 755,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13026:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [
														{
															"id": 759,
															"name": "roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "13060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13053:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 757,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13053:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13053:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13026:42:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 762,
															"name": "phaseId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "13083:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 763,
															"name": "aggregatorRoundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "13092:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"id": 764,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13082:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint16_$_t_uint64_$",
														"typeString": "tuple(uint16,uint64)"
													}
												},
												"functionReturnParameters": 745,
												"id": 765,
												"nodeType": "Return",
												"src": "13075:35:2"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseIds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "12910:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12910:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12909:17:2"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "12950:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 741,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12950:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "12958:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 743,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "12958:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12949:16:2"
									},
									"scope": 830,
									"src": "12892:223:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "13392:164:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 793,
																	"name": "phaseId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "13422:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 796,
																			"name": "roundId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 769,
																			"src": "13438:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint80",
																				"typeString": "uint80"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint80",
																				"typeString": "uint80"
																			}
																		],
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13431:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 794,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "13431:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13431:15:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"id": 792,
																"name": "addPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "13413:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint64_$returns$_t_uint80_$",
																	"typeString": "function (uint16,uint64) pure returns (uint80)"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13413:34:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														{
															"id": 799,
															"name": "answer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "13455:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 800,
															"name": "startedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "13469:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 801,
															"name": "updatedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "13486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 803,
																	"name": "phaseId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "13512:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 806,
																			"name": "answeredInRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "13528:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint80",
																				"typeString": "uint80"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint80",
																				"typeString": "uint80"
																			}
																		],
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13521:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 804,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "13521:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13521:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"id": 802,
																"name": "addPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "13503:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint64_$returns$_t_uint80_$",
																	"typeString": "function (uint16,uint64) pure returns (uint80)"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13503:42:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														}
													],
													"id": 809,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13405:146:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"functionReturnParameters": 791,
												"id": 810,
												"nodeType": "Return",
												"src": "13398:153:2"
											}
										]
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addPhaseIds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13145:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 768,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "13145:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 770,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "13165:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13184:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13184:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13207:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13230:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 776,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "13230:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "phaseId",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 778,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "13258:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13139:137:2"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13319:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 781,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "13319:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13333:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 783,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "13333:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13347:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13347:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13362:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13362:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "13377:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 789,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "13377:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13311:78:2"
									},
									"scope": 830,
									"src": "13119:437:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "13610:104:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "s_proposedAggregator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 197,
																		"src": "13632:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																			"typeString": "contract AggregatorProxyInterface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AggregatorProxyInterface_$934",
																			"typeString": "contract AggregatorProxyInterface"
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13624:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13624:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13624:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13665:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13657:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 819,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13657:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13657:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "13624:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2070726f706f7365642061676772656761746f722070726573656e74",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13669:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b0a4fbbf71e6220a80f9141c55b7007372459ce04b46ba5f37cfc52e00a618f",
																"typeString": "literal_string \"No proposed aggregator present\""
															},
															"value": "No proposed aggregator present"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b0a4fbbf71e6220a80f9141c55b7007372459ce04b46ba5f37cfc52e00a618f",
																"typeString": "literal_string \"No proposed aggregator present\""
															}
														],
														"id": 814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13616:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13616:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "13616:86:2"
											},
											{
												"id": 827,
												"nodeType": "PlaceholderStatement",
												"src": "13708:1:2"
											}
										]
									},
									"id": 829,
									"name": "hasProposal",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13607:2:2"
									},
									"src": "13587:127:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 831,
							"src": "395:13321:2"
						}
					],
					"src": "32:13685:2"
				},
				"id": 2
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol": {
				"ast": {
					"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol",
					"exportedSymbols": {
						"AggregatorInterface": [
							878
						]
					},
					"id": 879,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 832,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 878,
							"linearizedBaseContracts": [
								878
							],
							"name": "AggregatorInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "50d25bcd",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestAnswer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:3"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "138:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 834,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "138:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:8:3"
									},
									"scope": 878,
									"src": "91:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8205bf6a",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestTimestamp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "200:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:9:3"
									},
									"scope": 878,
									"src": "150:59:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "668a0f02",
									"id": 847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRound",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:3"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "259:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:9:3"
									},
									"scope": 878,
									"src": "213:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b5ab58dc",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAnswer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:17:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "331:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 851,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "331:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:8:3"
									},
									"scope": 878,
									"src": "272:67:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b633620c",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTimestamp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "365:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:17:3"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "405:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:9:3"
									},
									"scope": 878,
									"src": "343:71:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 869,
									"name": "AnswerUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"indexed": true,
												"mutability": "mutable",
												"name": "current",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "438:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 862,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "462:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"indexed": false,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "487:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:68:3"
									},
									"src": "418:88:3"
								},
								{
									"anonymous": false,
									"id": 877,
									"name": "NewRound",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "525:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"indexed": true,
												"mutability": "mutable",
												"name": "startedBy",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"indexed": false,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "577:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:71:3"
									},
									"src": "510:86:3"
								}
							],
							"scope": 879,
							"src": "57:541:3"
						}
					],
					"src": "32:567:3"
				},
				"id": 3
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol": {
				"ast": {
					"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorProxyInterface.sol",
					"exportedSymbols": {
						"AggregatorInterface": [
							878
						],
						"AggregatorProxyInterface": [
							934
						],
						"AggregatorV2V3Interface": [
							943
						],
						"AggregatorV3Interface": [
							989
						]
					},
					"id": 935,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 880,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol",
							"file": "./AggregatorV2V3Interface.sol",
							"id": 881,
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 944,
							"src": "57:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 882,
										"name": "AggregatorV2V3Interface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 943,
										"src": "136:23:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV2V3Interface_$943",
											"typeString": "contract AggregatorV2V3Interface"
										}
									},
									"id": 883,
									"nodeType": "InheritanceSpecifier",
									"src": "136:23:4"
								}
							],
							"contractDependencies": [
								878,
								943,
								989
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 934,
							"linearizedBaseContracts": [
								934,
								943,
								989,
								878
							],
							"name": "AggregatorProxyInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c1597304",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "phaseAggregators",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "phaseId",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "190:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 884,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "190:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:16:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "229:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:9:4"
									},
									"scope": 934,
									"src": "164:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "58303b10",
									"id": 895,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "phaseId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:4"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "284:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 892,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "284:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:8:4"
									},
									"scope": 934,
									"src": "242:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8c4be30",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposedAggregator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "349:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:9:4"
									},
									"scope": 934,
									"src": "296:62:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6001ac53",
									"id": 915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposedGetRoundData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "392:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 901,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "392:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:16:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "450:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 904,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "450:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "467:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 906,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "467:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "513:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "538:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 912,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:124:4"
									},
									"scope": 934,
									"src": "362:205:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f6b4d91",
									"id": 928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proposedLatestRoundData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:2:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "648:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 917,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "648:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "665:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 919,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "665:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "686:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "711:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "736:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 925,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "736:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:124:4"
									},
									"scope": 934,
									"src": "571:194:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "245a7bfc",
									"id": 933,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "aggregator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "814:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:9:4"
									},
									"scope": 934,
									"src": "769:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 935,
							"src": "98:727:4"
						}
					],
					"src": "32:794:4"
				},
				"id": 4
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol": {
				"ast": {
					"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol",
					"exportedSymbols": {
						"AggregatorInterface": [
							878
						],
						"AggregatorV2V3Interface": [
							943
						],
						"AggregatorV3Interface": [
							989
						]
					},
					"id": 944,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 936,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol",
							"file": "./AggregatorInterface.sol",
							"id": 937,
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 879,
							"src": "57:35:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol",
							"file": "./AggregatorV3Interface.sol",
							"id": 938,
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 990,
							"src": "93:37:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "AggregatorInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 878,
										"src": "169:19:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorInterface_$878",
											"typeString": "contract AggregatorInterface"
										}
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "169:19:5"
								},
								{
									"baseName": {
										"id": 941,
										"name": "AggregatorV3Interface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 989,
										"src": "190:21:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$989",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "190:21:5"
								}
							],
							"contractDependencies": [
								878,
								989
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 943,
							"linearizedBaseContracts": [
								943,
								989,
								878
							],
							"name": "AggregatorV2V3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 944,
							"src": "132:82:5"
						}
					],
					"src": "32:183:5"
				},
				"id": 5
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							989
						]
					},
					"id": 990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 945,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 989,
							"linearizedBaseContracts": [
								989
							],
							"name": "AggregatorV3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "136:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 947,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:6"
									},
									"scope": 989,
									"src": "93:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "193:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:6"
									},
									"scope": 989,
									"src": "147:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "254:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:6"
									},
									"scope": 989,
									"src": "212:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "_roundId",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "500:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 961,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "500:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:17:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "559:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 964,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "581:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 966,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "581:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "602:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "627:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "652:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 972,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:129:6"
									},
									"scope": 989,
									"src": "478:203:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:2:6"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "754:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 977,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "754:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "776:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 979,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "797:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "822:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "847:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 985,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "847:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:129:6"
									},
									"scope": 989,
									"src": "685:191:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 990,
							"src": "57:821:6"
						}
					],
					"src": "32:847:6"
				},
				"id": 6
			},
			".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol": {
				"ast": {
					"absolutePath": ".deps/github/smartcontractkit/chainlink/contracts/src/v0.7/interfaces/OwnableInterface.sol",
					"exportedSymbols": {
						"OwnableInterface": [
							1005
						]
					},
					"id": 1006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 991,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1005,
							"linearizedBaseContracts": [
								1005
							],
							"name": "OwnableInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "123:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:9:7"
									},
									"scope": 1005,
									"src": "88:44:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f2fde38b",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "163:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "162:19:7"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "190:0:7"
									},
									"scope": 1005,
									"src": "136:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79ba5097",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "219:2:7"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:0:7"
									},
									"scope": 1005,
									"src": "195:36:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1006,
							"src": "57:176:7"
						}
					],
					"src": "32:202:7"
				},
				"id": 7
			}
		}
	}
}